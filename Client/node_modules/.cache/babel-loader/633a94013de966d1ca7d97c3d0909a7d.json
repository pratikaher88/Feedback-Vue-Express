{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js!/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue","mtime":1611241093435},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBV1MgZnJvbSAiYXdzLXNkayI7IC8vIGltcG9ydCBTcGVlY2gyVGV4dCBmcm9tICIuL1NUVCIKCmltcG9ydCBCb3dzZXIgZnJvbSAiYm93c2VyIjsKaW1wb3J0IGh0bWwyY2FudmFzIGZyb20gJ2h0bWwyY2FudmFzJzsKaW1wb3J0IENyb3BwZXIgZnJvbSAnanF1ZXJ5LWNyb3BwZXInOwp2YXIgYnJvd3NlciA9IEJvd3Nlci5nZXRQYXJzZXIod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZlZWRiYWNrRm9ybScsCiAgY29tcG9uZW50czogey8vIFNwZWVjaDJUZXh0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmVlZGJhY2tUZXh0QXJlYTogJycsCiAgICAgIHNlbGVjdGVkSW1hZ2U6IG51bGwsCiAgICAgIHRleHQ6ICcnLAogICAgICBzZW50ZW5jZXM6IG51bGwsCiAgICAgIHJlc3BvbnNlRGF0YTogW10sCiAgICAgIG1heF9sZW46ICc1MDAnLAogICAgICBzY3JlZW5zaG90OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1hZ2UnKSwKICAgICAgY3JvcHBlcjogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtTaXRlTmFtZTogd2luZG93LmxvY2F0aW9uLmhyZWZ9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7CiAgICAgIEJyb3dzZXJOYW1lOiBicm93c2VyLmdldEJyb3dzZXIoKS5uYW1lICsgJyA6ICcgKyBicm93c2VyLmdldEJyb3dzZXIoKS52ZXJzaW9uCiAgICB9KTsKICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goewogICAgICBSZXNvbHV0aW9uOiBTdHJpbmcod2luZG93LnNjcmVlbi53aWR0aCkgKyAneCcgKyBTdHJpbmcod2luZG93LnNjcmVlbi5oZWlnaHQpCiAgICB9KTsKICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goewogICAgICB1c2VyQWdlbnQ6IG5hdmlnYXRvci51c2VyQWdlbnQKICAgIH0pOwogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7CiAgICAgICdBQ0NFUFQgTEFOR1VBR0UnOiBuYXZpZ2F0b3IubGFuZ3VhZ2UKICAgIH0pOwoKICAgIGlmIChkb2N1bWVudC5yZWZlcnJlcikgewogICAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsKICAgICAgICAnUkVGRVJSRVInOiBkb2N1bWVudC5yZWZlcnJlcgogICAgICB9KTsKICAgIH0KCiAgICB2YXIgaTsKICAgIHZhciBwbHVnaW5zRGF0YSA9ICIiOwoKICAgIGZvciAoaSA9IDA7IGkgPCBuYXZpZ2F0b3IucGx1Z2lucy5sZW5ndGg7IGkrKykgewogICAgICBwbHVnaW5zRGF0YSArPSBuYXZpZ2F0b3IucGx1Z2luc1tpXS5uYW1lICsgIiAtICIgKyBuYXZpZ2F0b3IucGx1Z2luc1tpXS5maWxlbmFtZSArICIuICI7CiAgICB9CgogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7CiAgICAgIFBsdWdpbnM6IHBsdWdpbnNEYXRhCiAgICB9KTsKICAgIHZhciBpbWFnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWFnZScpOwogICAgdGhpcy5jcm9wcGVyID0gbmV3IENyb3BwZXIoaW1hZ2UsIHsKICAgICAgYXNwZWN0UmF0aW86IDMgLyAxLAogICAgICBjcm9wQm94UmVzaXphYmxlOiBmYWxzZSwKICAgICAgdmlld01vZGU6IDEsCiAgICAgIGNyb3A6IGZ1bmN0aW9uIGNyb3AoZXZlbnQpIHsKICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwueCk7CiAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLnkpOwogICAgICB9CiAgICB9KTsgLy8gdmFyIHJlcSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgLy8gcmVxLm9wZW4oJ0dFVCcsIGRvY3VtZW50LmxvY2F0aW9uLCBmYWxzZSk7CiAgICAvLyByZXEuc2VuZChudWxsKTsKICAgIC8vIHZhciBoZWFkZXJzID0gcmVxLmdldEFsbFJlc3BvbnNlSGVhZGVycygpLnRvTG93ZXJDYXNlKCk7CiAgICAvLyBjb25zb2xlLmxvZygiSGVhZGVycyIsaGVhZGVycykKICAgIC8vIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goe1BsdWdpbnM6IG5hdmlnYXRvci5wbHVnaW5zWzFdLm5hbWV9KQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbW1lbnRDaGFyYWN0ZXJDb3VudDogZnVuY3Rpb24gY29tbWVudENoYXJhY3RlckNvdW50KCkgewogICAgICByZXR1cm4gdGhpcy5mZWVkYmFja1RleHRBcmVhLmxlbmd0aDsKICAgIH0sCiAgICBpc0Rpc2FibGVkOiBmdW5jdGlvbiBpc0Rpc2FibGVkKCkgewogICAgICByZXR1cm4gdGhpcy5mZWVkYmFja1RleHRBcmVhLmxlbmd0aCA9PSB0aGlzLm1heF9sZW47CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBzZW50VGV4dHModGV4dCl7CiAgICAvLyAgIGNvbnNvbGUubG9nKHRleHQpCiAgICAvLyB9LAogICAgY2xpY2tTQzogZnVuY3Rpb24gY2xpY2tTQygpIHsKICAgICAgaHRtbDJjYW52YXMoZG9jdW1lbnQuYm9keSkudGhlbihmdW5jdGlvbiAoY2FudmFzKSB7CiAgICAgICAgY29uc29sZS5sb2coImhlbGxvIik7IC8vIHZhciBpbWdTdHJpbmcgPSBjYW52YXMudG9EYXRhVVJMKCJpbWFnZS9wbmciKTsKICAgICAgICAvLyBjb25zb2xlLmxvZyhpbWdTdHJpbmcpCiAgICAgICAgLy8gd2luZG93Lm9wZW4oaW1nU3RyaW5nKTsKCiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpOwogICAgICB9KTsgLy8gaHRtbDJjYW52YXMoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRyb2wnKSx7CiAgICAgIC8vICAgICAgICAgICBvbnJlbmRlcmVkOiBmdW5jdGlvbiAoY2FudmFzKSB7ICAgIAogICAgICAvLyAgICAgICAgICAgICBjb25zb2xlLmxvZygiaGVsbG8iKQogICAgICAvLyAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7ICAgICAgICAgICAgIAogICAgICAvLyAgICAgICAgICAgICAvLyB2YXIgaW1nU3RyaW5nID0gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvcG5nIik7CiAgICAgIC8vICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGltZ1N0cmluZyk7CiAgICAgIC8vICAgICAgICAgICAgIC8vIHdpbmRvdy5vcGVuKGltZ1N0cmluZyk7ICAgICAgICAgICAgICAgICAgCiAgICAgIC8vICAgICAgIH0KICAgICAgLy8gICB9KTsKICAgIH0sCiAgICBkZWxldGVJdGVtOiBmdW5jdGlvbiBkZWxldGVJdGVtKGluZGV4KSB7CiAgICAgIHRoaXMucmVzcG9uc2VEYXRhLnNwbGljZShpbmRleCwgMSk7IC8vIGNvbnNvbGUubG9nKHByb3BlcnR5TmFtZSkKICAgICAgLy8gZGVsZXRlIHRoaXMucmVzcG9uc2VEYXRhW3Byb3BlcnR5TmFtZV07CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucmVzcG9uc2VEYXRhKQogICAgfSwKICAgIHNwZWVjaEVuZDogZnVuY3Rpb24gc3BlZWNoRW5kKF9yZWYpIHsKICAgICAgdmFyIHNlbnRlbmNlcyA9IF9yZWYuc2VudGVuY2VzLAogICAgICAgICAgdGV4dCA9IF9yZWYudGV4dDsKICAgICAgY29uc29sZS5sb2coJ3RleHQnLCB0ZXh0KTsKICAgICAgY29uc29sZS5sb2coJ3NlbnRlbmNlcycsIHNlbnRlbmNlcyk7CiAgICAgIHRoaXMuc2VudGVuY2VzID0gc2VudGVuY2VzOwogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSB0ZXh0OwogICAgfSwKICAgIHN1Ym1pdEZlZWRiYWNrRm9ybTogZnVuY3Rpb24gc3VibWl0RmVlZGJhY2tGb3JtKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2codGhpcy5mZWVkYmFja1RleHRBcmVhKTsKICAgICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7CiAgICAgICAgQ29tbWVudDogdGhpcy5mZWVkYmFja1RleHRBcmVhCiAgICAgIH0pOwogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSAnJzsKICAgICAgY29uc29sZS5sb2coIkZvcm0gc3VibWl0dGVkIik7CiAgICAgIEFXUy5jb25maWcudXBkYXRlKHsKICAgICAgICByZWdpb246ICJhcC1zb3V0aC0xIiwKICAgICAgICBjcmVkZW50aWFsczogbmV3IEFXUy5Db2duaXRvSWRlbnRpdHlDcmVkZW50aWFscyh7CiAgICAgICAgICBJZGVudGl0eVBvb2xJZDogImFwLXNvdXRoLTE6OTQ2MDc1ZGMtMTY1Ni00NGQxLTkyY2QtNGM4YWE2YTJlYzA4IgogICAgICAgIH0pCiAgICAgIH0pOwogICAgICB2YXIgczMgPSBuZXcgQVdTLlMzKCk7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZEltYWdlKSB7CiAgICAgICAgdmFyIGZpbGVQYXRoID0gdGhpcy5zZWxlY3RlZEltYWdlLm5hbWU7CiAgICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICAgICJCb2R5IjogdGhpcy5zZWxlY3RlZEltYWdlLAogICAgICAgICAgIkJ1Y2tldCI6ICJmZWVkYmFja3Rvb2xidWNrZXQiLAogICAgICAgICAgIktleSI6IGZpbGVQYXRoLAogICAgICAgICAgIkFDTCI6ICJwdWJsaWMtcmVhZCIsCgogICAgICAgICAgLyogVGhpcyBtYWtlcyB0aGUgaW1hZ2UgcHVibGljLCBidXQgb25seSB3b3JrcyBpZiB5b3VyIFMzIGJ1Y2tldCBhbGxvd3MgcHVibGljIGFjY2VzcyAqLwogICAgICAgICAgIkNvbnRlbnRUeXBlIjogdGhpcy5zZWxlY3RlZEltYWdlLnR5cGUKICAgICAgICAgIC8qIFRoaXMgaXMgaW1wb3J0YW50IHRvIGhhbmRsZSBqcGcgdnMgcG5nIGV0YyAqLwoKICAgICAgICB9OwogICAgICAgIHMzLnVwbG9hZChwYXJhbXMsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHsKICAgICAgICAgIGlmIChlcnIpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yIiwgZXJyKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoZGF0YSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygiVXBsb2FkIFN1Y2Nlc3MiLCBkYXRhLkxvY2F0aW9uKTsKCiAgICAgICAgICAgIF90aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsKICAgICAgICAgICAgICBJbWFnZUxvY2F0aW9uOiBkYXRhLkxvY2F0aW9uCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VsZWN0ZWRJbWFnZUlkIikudmFsdWUgPSBudWxsOwogICAgfSwKICAgIG9uSW1hZ2VTZWxlY3RlZDogZnVuY3Rpb24gb25JbWFnZVNlbGVjdGVkKGUpIHsKICAgICAgdGhpcy5zZWxlY3RlZEltYWdlID0gZS50YXJnZXQuZmlsZXNbMF07CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWRJbWFnZSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n              <div class=\"field\" >\n                  <label class=\"label\"> \n                    <strong> Comments: </strong> \n                    <span> \n                      ({{ commentCharacterCount }}/{{ max_len }}) \n                      <span v-if=\"isDisabled\" class=\"max_len_tag\">\n                        - Maximum length reached !\n                      </span>\n                    </span>\n\n                  </label>\n\n                  <div class=\"control\">\n                      <textarea id=\"textAreaBox\" rows=\"5\" cols=\"60\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\" placeholder=\"We would love to hear your feedback. but please do not share any sensitive personal information.\"/>\n                      <!-- <Speech2Text @speechend=\"speechEnd\" /> -->\n                      <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                            <!-- {{sentences}} -->\n                  </div>\n                  <input type=\"file\" id=\"selectedImageId\" @change=\"onImageSelected\">\n\n                  <b-button @click=\"clickSC\"> Take screenshot </b-button>\n\n                  <b-button v-b-modal.modal-review-data>Review Data</b-button>\n\n                  <b-modal id=\"modal-review-data\" title=\"Review Data\">\n\n                    <b-list-group v-for=\"(value, index) in responseData\" :key=\"index\">\n    \n                      <b-list-group-item> <strong> {{ Object.keys(value)[0] }} </strong> : {{ value[Object.keys(value)[0]] }} <button class=\"btn btn-danger\" v-on:click=\"deleteItem(index)\" style=\"float: right;\">x</button></b-list-group-item>\n\n                    </b-list-group>\n\n                    </b-modal>\n\n                  <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" >SUBMIT</button>\n              </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- {{ responseData }} -->\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n\n    <br/>\n    <br/>\n\n    <img id=\"image\" src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/Default-avatar.jpg\">\n\n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\n// import Speech2Text from \"./STT\"\nimport Bowser from \"bowser\";\nimport html2canvas from 'html2canvas';\nimport Cropper from  'jquery-cropper';\n\nconst browser = Bowser.getParser(window.navigator.userAgent);\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    // Speech2Text\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      selectedImage: null,\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      screenshot: document.getElementById('image'),\n      cropper: null,\n\n    }\n  },\n\n  mounted() {\n    // this.responseData.push({SiteName: window.location.href})\n    this.responseData.push({BrowserName: browser.getBrowser().name + ' : ' + browser.getBrowser().version})\n    this.responseData.push({Resolution: String(window.screen.width) + 'x' + String(window.screen.height) })\n    this.responseData.push({ userAgent: navigator.userAgent})\n    this.responseData.push({ 'ACCEPT LANGUAGE': navigator.language})\n    if (document.referrer){\n      this.responseData.push({ 'REFERRER': document.referrer})\n    }\n\n    var i;var pluginsData = \"\";\n    for (i = 0; i < navigator.plugins.length; i++) {\n      pluginsData += navigator.plugins[i].name + \" - \"+ navigator.plugins[i].filename + \". \" ;\n    }\n\n    this.responseData.push({Plugins: pluginsData})\n\n    var image = document.getElementById('image');\n        this.cropper = new Cropper(image, {\n          aspectRatio: 3/1,\n          cropBoxResizable: false,\n          viewMode: 1,\n          crop(event) {\n            console.log(event.detail.x);\n            console.log(event.detail.y);\n          },\n        });\n\n    // var req = new XMLHttpRequest();\n    // req.open('GET', document.location, false);\n    // req.send(null);\n    // var headers = req.getAllResponseHeaders().toLowerCase();\n    \n    // console.log(\"Headers\",headers)\n    // this.responseData.push({Plugins: navigator.plugins[1].name})\n\n\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    isDisabled(){\n      return this.feedbackTextArea.length==this.max_len;\n    }\n\n  },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    clickSC(){\n      html2canvas(document.body).then(canvas => {\n                  console.log(\"hello\")\n                  // var imgString = canvas.toDataURL(\"image/png\");\n                  // console.log(imgString)\n                  // window.open(imgString);\n                  document.body.appendChild(canvas);   \n        });\n      // html2canvas(document.querySelector('.control'),{\n      //           onrendered: function (canvas) {    \n      //             console.log(\"hello\")\n      //             document.body.appendChild(canvas);             \n      //             // var imgString = canvas.toDataURL(\"image/png\");\n      //             // console.log(imgString);\n      //             // window.open(imgString);                  \n      //       }\n      //   });\n\n    },\n\n    deleteItem(index){\n      this.responseData.splice(index,1)\n      // console.log(propertyName)\n      // delete this.responseData[propertyName];\n      // console.log(this.responseData)\n    },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    submitFeedbackForm() {\n      \n      console.log(this.feedbackTextArea)\n      this.responseData.push({Comment: this.feedbackTextArea})\n\n      this.feedbackTextArea = ''\n      console.log(\"Form submitted\")\n\n      AWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\n      let s3 = new AWS.S3();\n      \n      if (this.selectedImage){\n\n        var filePath = this.selectedImage.name;\n      \n        var params = {\n            \"Body\": this.selectedImage,\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": this.selectedImage.type /* This is important to handle jpg vs png etc */\n        };\n\n        s3.upload(params, (err, data) => {\n            if (err) {\n              console.log(\"Error\", err);\n            } if (data) {\n              console.log(\"Upload Success\", data.Location);\n              this.responseData.push({ImageLocation: data.Location})\n            }\n          });\n      }\n\n      document.getElementById(\"selectedImageId\").value = null;\n\n      },\n      onImageSelected(e) {\n        this.selectedImage = e.target.files[0]\n        console.log(this.selectedImage)\n      }\n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n\n\n.submitbutton {\n  background-color: purple; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n.upload {\n  background-color: darkgreen; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n\n</style>\n"],"sourceRoot":"src/components"}]}