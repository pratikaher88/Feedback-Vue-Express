{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js!/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/Cropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/Cropper.vue","mtime":1611396017341},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDcm9wcGVyIGZyb20gJ2Nyb3BwZXJqcyc7CnZhciBfZGF0YSA9IHsKICBjb29yZHM6IHsKICAgIHg6IDAsCiAgICB5OiAwLAogICAgd2lkdGg6IDAsCiAgICBoZWlnaHQ6IDAsCiAgICByb3RhdGU6IDAsCiAgICBzY2FsZVg6IDAsCiAgICBzY2FsZVk6IDAKICB9LAogIGltYWdlU3JjOiAnaHR0cHM6Ly9pLmltZ3VyLmNvbS9mSHlFTXNsLmpwZycsCiAgY3JvcHBlcjogbnVsbAp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Nyb3BwZXInLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gX2RhdGE7CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblNlbGVjdEltYWdlOiBmdW5jdGlvbiBvblNlbGVjdEltYWdlKCRldmVudCkgewogICAgICB2YXIgaW1nID0gJGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgdmFyIHRtcHBhdGggPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGltZyk7CiAgICAgIF9kYXRhLmltYWdlU3JjID0gdG1wcGF0aDsKCiAgICAgIF9kYXRhLmNyb3BwZXIucmVwbGFjZShfZGF0YS5pbWFnZVNyYyk7CiAgICB9LAogICAgb25Dcm9wOiBmdW5jdGlvbiBvbkNyb3AoJGV2ZW50KSB7CiAgICAgIGNvbnNvbGUubG9nKCRldmVudCk7IC8vaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzU2MTM3OTkvY2hhbmdlLWltYWdlLW9iamVjdC1kaW1lbnNpb25zLXdpZHRoLWFuZC1oZWlnaHQKCiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJldmlldycpOwogICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7CiAgICAgIHZhciBpbWcgPSBuZXcgSW1hZ2UoKTsKICAgICAgaW1nLnNyYyA9IF9kYXRhLmltYWdlU3JjOwogICAgICBjYW52YXMud2lkdGggPSBpbWcud2lkdGg7CiAgICAgIGNhbnZhcy5oZWlnaHQgPSBpbWcuaGVpZ2h0OwogICAgICB2YXIgdyA9IGltZy53aWR0aDsKICAgICAgdmFyIGggPSBpbWcuaGVpZ2h0OyAvLyByZXNpemUgaW1nIHRvIGZpdCBpbiB0aGUgY2FudmFzIAogICAgICAvLyBZb3UgY2FuIGFsdGVybmF0ZWx5IHJlcXVlc3QgaW1nIHRvIGZpdCBpbnRvIGFueSBzcGVjaWZpZWQgd2lkdGgvaGVpZ2h0CgogICAgICB2YXIgc2l6ZXIgPSB0aGlzLnNjYWxlUHJlc2VydmVBc3BlY3RSYXRpbyh3LCBoLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgICBjdHguZHJhd0ltYWdlKGltZywgX2RhdGEuY29vcmRzLngsIF9kYXRhLmNvb3Jkcy55LCBfZGF0YS5jb29yZHMud2lkdGgsIF9kYXRhLmNvb3Jkcy5oZWlnaHQsIDAsIDAsIHcgKiBzaXplciwgaCAqIHNpemVyKTsKICAgIH0sCiAgICBzY2FsZVByZXNlcnZlQXNwZWN0UmF0aW86IGZ1bmN0aW9uIHNjYWxlUHJlc2VydmVBc3BlY3RSYXRpbyhpbWdXLCBpbWdILCBtYXhXLCBtYXhIKSB7CiAgICAgIHJldHVybiBNYXRoLm1pbihtYXhXIC8gaW1nVywgbWF4SCAvIGltZ0gpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBpbWFnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWFnZScpOwogICAgX2RhdGEuY3JvcHBlciA9IG5ldyBDcm9wcGVyKGltYWdlLCB7CiAgICAgIGFzcGVjdFJhdGlvOiAxNiAvIDksCiAgICAgIGNyb3A6IGZ1bmN0aW9uIGNyb3AoZSkgewogICAgICAgIF9kYXRhLmNvb3Jkcy54ID0gZS5kZXRhaWwueDsKICAgICAgICBfZGF0YS5jb29yZHMueSA9IGUuZGV0YWlsLnk7CiAgICAgICAgX2RhdGEuY29vcmRzLndpZHRoID0gZS5kZXRhaWwud2lkdGg7CiAgICAgICAgX2RhdGEuY29vcmRzLmhlaWdodCA9IGUuZGV0YWlsLmhlaWdodDsKICAgICAgICBfZGF0YS5jb29yZHMucm90YXRlID0gZS5kZXRhaWwucm90YXRlOwogICAgICAgIF9kYXRhLmNvb3Jkcy5zY2FsZVggPSBlLmRldGFpbC5zY2FsZVg7CiAgICAgICAgX2RhdGEuY29vcmRzLnNjYWxlWSA9IGUuZGV0YWlsLnNjYWxlWTsKICAgICAgfQogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["Cropper.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"image-wrapper\"> \n    <img id=\"image\" :src=\"imageSrc\"> \n    </div>  \n    <canvas id=\"preview\"></canvas> \n    <br> \n    <button id=\"crop\" @click=\"onCrop($event)\">Crop</button> \n    <input type=\"file\" id=\"select-image\" accept=\"image/*\" @change=\"onSelectImage($event)\"> \n    </div>\n</template>\n\n<script>\nimport Cropper from 'cropperjs';\n\nvar data = { \n  coords: { x: 0, y: 0, width: 0, height: 0, rotate: 0, scaleX: 0, scaleY: 0 },\n  imageSrc: 'https://i.imgur.com/fHyEMsl.jpg',\n  cropper: null\n}\n\nexport default {\n  name: 'Cropper',\n\n  data() {\n      return data;\n  },\n\n  methods: {\n    onSelectImage: function($event) {\n      let img = $event.target.files[0];\n      let tmppath = URL.createObjectURL(img);\n      data.imageSrc = tmppath;\n      \n      data.cropper.replace(data.imageSrc);\n    },\n    onCrop: function($event) {\n      console.log($event)\n      //https://stackoverflow.com/questions/35613799/change-image-object-dimensions-width-and-height\n      let canvas = document.getElementById('preview');\n      let ctx = canvas.getContext('2d');\n      let img = new Image();\n      img.src = data.imageSrc;\n      \n      canvas.width  = img.width;\n      canvas.height = img.height;\n      \n      let w = img.width;\n      let h = img.height;\n\n      // resize img to fit in the canvas \n      // You can alternately request img to fit into any specified width/height\n      let sizer = this.scalePreserveAspectRatio(w, h, canvas.width, canvas.height);\n      \n      ctx.drawImage(img, data.coords.x, data.coords.y, data.coords.width, data.coords.height, 0, 0, w * sizer, h * sizer);\n    },\n    scalePreserveAspectRatio: function(imgW, imgH, maxW, maxH) {\n      return(Math.min((maxW / imgW), (maxH / imgH)));\n    }\n\n  },\n  mounted: function() {\n    let image    = document.getElementById('image');\n    data.cropper = new Cropper(image, {\n      aspectRatio: 16 / 9,\n      crop(e) {\n        data.coords.x = e.detail.x;\n        data.coords.y = e.detail.y;\n        data.coords.width = e.detail.width;\n        data.coords.height = e.detail.height;\n        data.coords.rotate = e.detail.rotate;\n        data.coords.scaleX = e.detail.scaleX;\n        data.coords.scaleY = e.detail.scaleY;\n      }\n    });\n  }\n\n}\n\n</script>\n\n<style>\nimg {\n  max-width: 100%; /* This rule is very important, please do not ignore this! */\n}\n\n#preview {\n  width:  256px;\n  height: 144px;\n  border: 1px solid;\n  display: inline-block;\n}\n\n.image-wrapper {\n  width: 600px; \n  height: auto; \n  display: inline-block;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}