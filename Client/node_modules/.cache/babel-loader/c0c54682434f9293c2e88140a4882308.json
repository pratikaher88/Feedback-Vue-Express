{"remainingRequest":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/babel-loader/lib/index.js!/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/src/components/FeedbackForm.vue","mtime":1611896862989},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <b-alert\n      :show=\"dismissCountDown\"\n      dismissible\n      fade\n      variant=\"success\"\n      @dismiss-count-down=\"countDownChanged\"\n    >\n      Response successfully submitted !\n    </b-alert>\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n              <div class=\"field\" >\n                  <label class=\"label\"> \n                    <strong> Comments: </strong> \n                    <span> \n                      ({{ commentCharacterCount }}/{{ max_len }}) \n                      <span v-if=\"lengthExceeded\" class=\"max_len_tag\">\n                        - Maximum length reached !\n                      </span>\n                    </span>\n                  </label>\n\n                  <div class=\"control\">\n                      <textarea id=\"textAreaBox\" rows=\"5\" cols=\"80\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\" placeholder=\"We would love to hear your feedback. but please do not share any sensitive personal information.\"/>\n                      <br/>\n                      <Speech2Text @speechend=\"speechEnd\" />\n                      <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                            <!-- {{sentences}} -->\n                  </div>\n\n                  <div class=\"action-buttons-tab pull-right\">\n                    \n                    <b-button id=\"uploadimagebutton\" @click=\"$bvModal.show('bv-modal-show-uploadimagebutton');\"> Upload Image </b-button>\n                    \n                    <b-modal id=\"bv-modal-show-uploadimagebutton\" size=\"xl\" hide-footer>\n                      <template #modal-title>\n                        Upload Image\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <input type=\"file\" id=\"selectedImageId\" @change=\"onImageSelected\" accept=\"image/*\" >\n                        <strong style=\"margin-left: 0px;margin-right:20px\">OR</strong>\n                        <b-button id=\"screenshotbutton\" @click=\"clickSC(); $bvModal.show('bv-modal-show-screenshot');\"> Take screenshot </b-button>\n                        \n                        <br/>\n                        <br/>\n                        <div class=\"preview-tab\" v-if=\"isHidden\">\n                          <img id=\"file-upload-image\" :src=\"imageURL\" alt=\"\" />\n                        </div>\n                      </div>\n                      <b-button class=\"mt-3\" block variant='outline-danger' @click=\"removeImage\">Remove Preview Image</b-button>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-uploadimagebutton')\">Close</b-button>\n\n                    </b-modal>\n\n                    <b-modal id=\"bv-modal-show-screenshot\" size=\"xl\" hide-footer>\n                      <template #modal-title>\n                        Screenshot\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <cropper\n                            :src=\"screenshot\"\n                            @change=\"change\"\n                            :stencil-props=\"{\n                              aspectRatio: 16/9,\n                            }\"\n                          />\n                      </div>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-screenshot')\">Close</b-button>\n                      <b-button class=\"mt-3\" variant='outline-danger' block @click=\"cropImage();$bvModal.hide('bv-modal-show-screenshot')\">Crop and Save</b-button>\n\n                    </b-modal>\n\n                    <b-button class=\"reviewbutton\" @click=\"$bvModal.show('bv-modal-review-data')\">Review Data</b-button>\n\n                    <b-modal id=\"bv-modal-review-data\" hide-footer>\n                      <template #modal-title>\n                        Review Data\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <b-list-group v-for=\"(value, index) in responseData\" :key=\"index\">\n    \n                          <b-list-group-item align=\"left\" > <strong> {{ Object.keys(value)[0] }} </strong> : {{ value[Object.keys(value)[0]] }} <button class=\"btn btn-danger\" v-on:click=\"deleteItem(index)\" style=\"float: right;\">x</button></b-list-group-item>\n\n                        </b-list-group>\n\n                          <b-list-group-item align=\"left\" v-if=\"this.feedbackTextArea\" style=\"padding:20px\"> <strong> Comment </strong> : {{ this.feedbackTextArea }} <button class=\"btn btn-danger\" v-on:click=\"deleteComment()\" style=\"float: right; \">x</button></b-list-group-item>\n\n                          <b-list-group-item align=\"left\" v-if=\"this.imageURL\"> <strong> Image URL</strong> : <img id=\"file-upload-image\" :src=\"imageURL\" alt=\"\" /> <button class=\"btn btn-danger\" v-on:click=\"removeImage()\" style=\"float: right;\">x</button></b-list-group-item>\n\n\n                      </div>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-review-data')\">Close</b-button>\n                    </b-modal>\n\n                    <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" disabled>SUBMIT</button>\n                </div>\n              </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- {{ responseData }} -->\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n\n    <br/>\n    <br/>\n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\nimport Speech2Text from \"./STT\"\nimport html2canvas from 'html2canvas';\nimport { Cropper } from 'vue-advanced-cropper';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'vue-advanced-cropper/dist/style.css';\nimport axios from 'axios';\n\n\nAWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    Speech2Text,\n    Cropper\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      screenshot: null,\n      canvasCropped: null,\n      imageURL: '',\n      dismissCountDown: 0,\n      dismissSecs: 2\n      }\n  },\n\n  mounted() {\n    \n    this.responseData.push({SiteName: window.location.href})\n    this.responseData.push({Resolution: String(window.screen.width) + 'x' + String(window.screen.height) })\n    this.responseData.push({ userAgent: navigator.userAgent})\n    this.responseData.push({ 'ACCEPT LANGUAGE': navigator.language})\n    if (document.referrer){\n      this.responseData.push({ 'REFERRER': document.referrer})\n    }\n\n    var i;var pluginsData = \"\";\n    for (i = 0; i < navigator.plugins.length; i++) {\n      pluginsData += navigator.plugins[i].name + \" - \"+ navigator.plugins[i].filename + \". \" ;\n    }\n\n    this.responseData.push({Plugins: pluginsData})\n\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    lengthExceeded(){\n      return this.feedbackTextArea.length==this.max_len;\n    },\n    isHidden(){\n      return this.imageURL != ''\n    }\n    \n\n  },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    countDownChanged(dismissCountDown) {\n        this.dismissCountDown = dismissCountDown\n      },\n\n    removeImage(){\n      this.imageURL = ''\n    },\n\n    cropImage(){\n      // console.log(\"Cropped Image:\",this.canvasCropped)\n      this.imageURL = this.canvasCropped.toDataURL('image/jpeg', 1)\n      // document.getElementById(\"file-upload-image\").setAttribute('src', this.canvasCropped.toDataURL('image/jpeg', 1));\n    },\n\n    change({ canvas }) {\n      this.canvasCropped = canvas\n      // var imgString = canvas.toDataURL(\"image/png\");\n      // document.getElementById('croppedImage').setAttribute('src', imgString);\n\t\t},\n\n    clickSC(){\n      html2canvas(document.body).then(canvas => {\n\n        this.screenshot = canvas.toDataURL('image/jpeg', 1);\n        });\n  \n    },\n\n    deleteItem(index){\n      this.responseData.splice(index,1)\n    },\n\n    deleteComment(){\n      this.feedbackTextArea = ''\n    },\n\n    showAlert() {\n        this.dismissCountDown = this.dismissSecs\n      },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    async submitFeedbackForm() {\n      \n      console.log(\"Form submitted\")\n      \n      if (this.imageURL){\n\n        let s3 = new AWS.S3();\n\n        var filePath = uuidv4();\n      \n        var params = {\n            \"Body\": Buffer.from(this.imageURL.replace(/^data:image\\/\\w+;base64,/, \"\"),'base64'),\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ContentEncoding\": 'base64',\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": 'image/jpg' /* This is important to handle jpg vs png etc */\n        };\n\n        try {\n          const s3Response = await s3.upload(params).promise();\n          console.log(s3Response);\n          this.responseData.push({ImageLocation: s3Response.Location})\n        } catch (error) {\n          console.log(error);\n        }\n\n      }\n\n      if (this.feedbackTextArea){\n        this.responseData.push({Comment: this.feedbackTextArea})\n      }\n\n      axios.post(process.env.VUE_APP_API_ENDPOINT_TO_SEND_FEEDBACK, \n          this.responseData\n          )\n          .then((response) => {\n            console.log(response);\n            this.showAlert()\n            this.feedbackTextArea = ''\n            this.responseData = []\n          }, (error) => {\n            console.log(error);\n            // throw error;\n          });\n\n      console.log(this.responseData)\n\n      \n       // response succesuuly submitted\n      // document.getElementById(\"selectedImageId\").value = null;\n\n    },\n    \n    async onImageSelected(event) {\n        // this.imageURL = URL.createObjectURL(e.target.files[0])\n        // const file = e.target.files[0];\n\n        // console.log(event.target.files[0])\n\n        const readUploadedFileAsText = (inputFile) => {\n          const temporaryFileReader = new FileReader();\n          return new Promise((resolve) => {\n            temporaryFileReader.addEventListener(\"load\", function() {\n              resolve(temporaryFileReader.result);\n            }); \n          temporaryFileReader.readAsDataURL( inputFile );\n              });\n        };\n\n        const file = event.target.files[0];\n\n        try {\n          const fileContents = await readUploadedFileAsText(file)  \n          this.imageURL = fileContents\n          // console.log(\"FC\",this.imageURL);\n        } catch (e) {\n          console.warn(e.message)\n        }\n\n        // console.log(\"wdhbfljsfgdn\", this.imageURL)\n\n    },\n\n    \n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n.submitbutton, .reviewbutton {\n  background-color: purple;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n.preview-tab{\n  display: flex;\n  justify-content: center;\n}\n\n\n#file-upload-image { \n  border: 5px solid #555;\n  margin:20px;\n  width: 200px;\n  height: 200px;\n\n}\n\n.submitbutton:disabled {\n  background-color: #dddddd;\n  background: #dddddd;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}