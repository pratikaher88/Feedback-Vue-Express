{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js!/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue","mtime":1611069983243},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBV1MgZnJvbSAiYXdzLXNkayI7CmltcG9ydCBTcGVlY2gyVGV4dCBmcm9tICIuL1NUVCI7CmltcG9ydCBCb3dzZXIgZnJvbSAiYm93c2VyIjsKdmFyIGJyb3dzZXIgPSBCb3dzZXIuZ2V0UGFyc2VyKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGZWVkYmFja0Zvcm0nLAogIGNvbXBvbmVudHM6IHsKICAgIFNwZWVjaDJUZXh0OiBTcGVlY2gyVGV4dAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZlZWRiYWNrVGV4dEFyZWE6ICcnLAogICAgICBzZWxlY3RlZEltYWdlOiBudWxsLAogICAgICB0ZXh0OiAnJywKICAgICAgc2VudGVuY2VzOiBudWxsLAogICAgICByZXNwb25zZURhdGE6IFtdLAogICAgICBtYXhfbGVuOiAnNTAwJywKICAgICAgc2hvd01vZGFsOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb21tZW50Q2hhcmFjdGVyQ291bnQ6IGZ1bmN0aW9uIGNvbW1lbnRDaGFyYWN0ZXJDb3VudCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmVlZGJhY2tUZXh0QXJlYS5sZW5ndGg7CiAgICB9LAogICAgaXNEaXNhYmxlZDogZnVuY3Rpb24gaXNEaXNhYmxlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmVlZGJhY2tUZXh0QXJlYS5sZW5ndGggPT0gdGhpcy5tYXhfbGVuOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goewogICAgICAiQ29tbWVudCI6IHRoaXMuZmVlZGJhY2tUZXh0QXJlYQogICAgfSk7CiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsKICAgICAgIlNpdGVOYW1lIjogd2luZG93LmxvY2F0aW9uLmhyZWYKICAgIH0pOwogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7CiAgICAgICJCcm93c2VyTmFtZSI6IGJyb3dzZXIuZ2V0QnJvd3NlcigpCiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIHNlbnRUZXh0cyh0ZXh0KXsKICAgIC8vICAgY29uc29sZS5sb2codGV4dCkKICAgIC8vIH0sCiAgICBkZWxldGVJdGVtOiBmdW5jdGlvbiBkZWxldGVJdGVtKGluZGV4KSB7CiAgICAgIHRoaXMucmVzcG9uc2VEYXRhLnNwbGljZShpbmRleCwgMSk7CiAgICB9LAogICAgc3BlZWNoRW5kOiBmdW5jdGlvbiBzcGVlY2hFbmQoX3JlZikgewogICAgICB2YXIgc2VudGVuY2VzID0gX3JlZi5zZW50ZW5jZXMsCiAgICAgICAgICB0ZXh0ID0gX3JlZi50ZXh0OwogICAgICBjb25zb2xlLmxvZygndGV4dCcsIHRleHQpOwogICAgICBjb25zb2xlLmxvZygnc2VudGVuY2VzJywgc2VudGVuY2VzKTsKICAgICAgdGhpcy5zZW50ZW5jZXMgPSBzZW50ZW5jZXM7CiAgICAgIHRoaXMuZmVlZGJhY2tUZXh0QXJlYSA9IHRleHQ7CiAgICB9LAogICAgc3VibWl0RmVlZGJhY2tGb3JtOiBmdW5jdGlvbiBzdWJtaXRGZWVkYmFja0Zvcm0oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZyh0aGlzLmZlZWRiYWNrVGV4dEFyZWEpOwogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSAnJzsKICAgICAgY29uc29sZS5sb2coIkZvcm0gc3VibWl0dGVkIik7CiAgICAgIEFXUy5jb25maWcudXBkYXRlKHsKICAgICAgICByZWdpb246ICJhcC1zb3V0aC0xIiwKICAgICAgICBjcmVkZW50aWFsczogbmV3IEFXUy5Db2duaXRvSWRlbnRpdHlDcmVkZW50aWFscyh7CiAgICAgICAgICBJZGVudGl0eVBvb2xJZDogImFwLXNvdXRoLTE6OTQ2MDc1ZGMtMTY1Ni00NGQxLTkyY2QtNGM4YWE2YTJlYzA4IgogICAgICAgIH0pCiAgICAgIH0pOwogICAgICB2YXIgczMgPSBuZXcgQVdTLlMzKCk7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZEltYWdlKSB7CiAgICAgICAgdmFyIGZpbGVQYXRoID0gdGhpcy5zZWxlY3RlZEltYWdlLm5hbWU7CiAgICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICAgICJCb2R5IjogdGhpcy5zZWxlY3RlZEltYWdlLAogICAgICAgICAgIkJ1Y2tldCI6ICJmZWVkYmFja3Rvb2xidWNrZXQiLAogICAgICAgICAgIktleSI6IGZpbGVQYXRoLAogICAgICAgICAgIkFDTCI6ICJwdWJsaWMtcmVhZCIsCgogICAgICAgICAgLyogVGhpcyBtYWtlcyB0aGUgaW1hZ2UgcHVibGljLCBidXQgb25seSB3b3JrcyBpZiB5b3VyIFMzIGJ1Y2tldCBhbGxvd3MgcHVibGljIGFjY2VzcyAqLwogICAgICAgICAgIkNvbnRlbnRUeXBlIjogdGhpcy5zZWxlY3RlZEltYWdlLnR5cGUKICAgICAgICAgIC8qIFRoaXMgaXMgaW1wb3J0YW50IHRvIGhhbmRsZSBqcGcgdnMgcG5nIGV0YyAqLwoKICAgICAgICB9OwogICAgICAgIHMzLnVwbG9hZChwYXJhbXMsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHsKICAgICAgICAgIGlmIChlcnIpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yIiwgZXJyKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoZGF0YSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygiVXBsb2FkIFN1Y2Nlc3MiLCBkYXRhLkxvY2F0aW9uKTsKCiAgICAgICAgICAgIF90aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsKICAgICAgICAgICAgICAiSW1hZ2VMb2NhdGlvbiI6IGRhdGEuTG9jYXRpb24KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBvbkltYWdlU2VsZWN0ZWQ6IGZ1bmN0aW9uIG9uSW1hZ2VTZWxlY3RlZChlKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRJbWFnZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkSW1hZ2UpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n                <div class=\"field\" >\n                    <label class=\"label\"> \n                      <strong> Comments: </strong> \n                      <span> \n                        ({{ commentCharacterCount }}/{{ max_len }}) \n                        <span v-if=\"isDisabled\" class=\"max_len_tag\">\n                          - Maximum length reached !\n                        </span>\n                      </span>\n\n                    </label>\n\n                    <div class=\"control\">\n                        <textarea id=\"textAreaBox\" rows=\"6\" cols=\"60\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\"/>\n                        <Speech2Text @speechend=\"speechEnd\" />\n                        <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                              <!-- {{sentences}} -->\n                    </div>\n                    <input type=\"file\" @change=\"onImageSelected\">\n\n                    <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" >SUBMIT</button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n    \n    <br/>\n    <br/>\n    <br/>\n\n    \n\n    <button id=\"show-modal\" @click=\"showModal = true\">Show Modal</button>\n    <modal v-if=\"showModal\" @close=\"showModal = false\"/>\n\n    <br/>\n\n    <div v-for=\"(value, index) in responseData\" :key=\"index\" class=\"list\">\n      \n      <li>{{ value }} <button class=\"delete\" v-on:click=\"deleteItem(index)\">x</button></li>\n\n    </div>\n\n    \n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\nimport Speech2Text from \"./STT\"\nimport Bowser from \"bowser\";\n\nconst browser = Bowser.getParser(window.navigator.userAgent);\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    Speech2Text\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      selectedImage: null,\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      showModal: false\n      \n    }\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    isDisabled(){\n      return this.feedbackTextArea.length==this.max_len;\n    }\n\n  },\n\n  mounted() {\n      this.responseData.push({\"Comment\": this.feedbackTextArea})\n      this.responseData.push({\"SiteName\": window.location.href})\n      this.responseData.push({\"BrowserName\": browser.getBrowser()})\n    },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    deleteItem(index){\n      this.responseData.splice(index, 1);\n    },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    submitFeedbackForm() {\n      \n      console.log(this.feedbackTextArea)\n\n      this.feedbackTextArea = ''\n      console.log(\"Form submitted\")\n\n      AWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\n      let s3 = new AWS.S3();\n      \n      if (this.selectedImage){\n\n        var filePath = this.selectedImage.name;\n      \n        var params = {\n            \"Body\": this.selectedImage,\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": this.selectedImage.type /* This is important to handle jpg vs png etc */\n        };\n\n        s3.upload(params, (err, data) => {\n            if (err) {\n              console.log(\"Error\", err);\n            } if (data) {\n              console.log(\"Upload Success\", data.Location);\n              this.responseData.push({\"ImageLocation\": data.Location})\n            }\n          });\n      }\n\n      },\n      onImageSelected(e) {\n        this.selectedImage = e.target.files[0]\n        console.log(this.selectedImage)\n      }\n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n.list {\n  list-style: none;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n}\n\nli {\n  background-color: black;\n  color: white;\n  border-radius: 3px;\n  padding: 10px;\n}\n\n.submitbutton {\n  background-color: purple; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 12px;\n}\n\n.upload {\n  background-color: darkgreen; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n\n</style>\n"],"sourceRoot":"src/components"}]}