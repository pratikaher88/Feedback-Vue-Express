{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue","mtime":1611431657941},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKaW1wb3J0IEFXUyBmcm9tICJhd3Mtc2RrIjsKLy8gaW1wb3J0IFNwZWVjaDJUZXh0IGZyb20gIi4vU1RUIgppbXBvcnQgaHRtbDJjYW52YXMgZnJvbSAnaHRtbDJjYW52YXMnOwppbXBvcnQgeyBDcm9wcGVyIH0gZnJvbSAndnVlLWFkdmFuY2VkLWNyb3BwZXInOwppbXBvcnQgJ3Z1ZS1hZHZhbmNlZC1jcm9wcGVyL2Rpc3Qvc3R5bGUuY3NzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRmVlZGJhY2tGb3JtJywKCiAgY29tcG9uZW50czogewogICAgLy8gU3BlZWNoMlRleHQKICAgIENyb3BwZXIKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmVlZGJhY2tUZXh0QXJlYTogJycsCiAgICAgIHNlbGVjdGVkSW1hZ2U6IG51bGwsCiAgICAgIHRleHQ6ICcnLAogICAgICBzZW50ZW5jZXM6IG51bGwsCiAgICAgIHJlc3BvbnNlRGF0YTogW10sCiAgICAgIG1heF9sZW46ICc1MDAnLAogICAgICBzY3JlZW5zaG90OiBudWxsLAogICAgICBjYW52YXNDcm9wcGVkOiBudWxsCiAgICAgIH0KICB9LAoKICBtb3VudGVkKCkgewoKICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goe1NpdGVOYW1lOiB3aW5kb3cubG9jYXRpb24uaHJlZn0pCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtSZXNvbHV0aW9uOiBTdHJpbmcod2luZG93LnNjcmVlbi53aWR0aCkgKyAneCcgKyBTdHJpbmcod2luZG93LnNjcmVlbi5oZWlnaHQpIH0pCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50fSkKICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goeyAnQUNDRVBUIExBTkdVQUdFJzogbmF2aWdhdG9yLmxhbmd1YWdlfSkKICAgIGlmIChkb2N1bWVudC5yZWZlcnJlcil7CiAgICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goeyAnUkVGRVJSRVInOiBkb2N1bWVudC5yZWZlcnJlcn0pCiAgICB9CgogICAgdmFyIGk7dmFyIHBsdWdpbnNEYXRhID0gIiI7CiAgICBmb3IgKGkgPSAwOyBpIDwgbmF2aWdhdG9yLnBsdWdpbnMubGVuZ3RoOyBpKyspIHsKICAgICAgcGx1Z2luc0RhdGEgKz0gbmF2aWdhdG9yLnBsdWdpbnNbaV0ubmFtZSArICIgLSAiKyBuYXZpZ2F0b3IucGx1Z2luc1tpXS5maWxlbmFtZSArICIuICIgOwogICAgfQoKICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goe1BsdWdpbnM6IHBsdWdpbnNEYXRhfSkKCiAgfSwKCiAgY29tcHV0ZWQ6IHsKCiAgICBjb21tZW50Q2hhcmFjdGVyQ291bnQoKSB7CiAgICAgIHJldHVybiB0aGlzLmZlZWRiYWNrVGV4dEFyZWEubGVuZ3RoOwoKICAgIH0sCiAgICBpc0Rpc2FibGVkKCl7CiAgICAgIHJldHVybiB0aGlzLmZlZWRiYWNrVGV4dEFyZWEubGVuZ3RoPT10aGlzLm1heF9sZW47CiAgICB9CgogIH0sCgogIG1ldGhvZHM6IHsKCiAgICAvLyBzZW50VGV4dHModGV4dCl7CiAgICAvLyAgIGNvbnNvbGUubG9nKHRleHQpCiAgICAvLyB9LAoKICAgIGNyb3BJbWFnZSgpewogICAgICBjb25zb2xlLmxvZygnSENFTEInKQogICAgICBjb25zb2xlLmxvZyh0aGlzLmNhbnZhc0Nyb3BwZWQpCiAgICB9LAoKICAgIGNoYW5nZSh7IGNhbnZhcyB9KSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKGNhbnZhcyk7CiAgICAgIHRoaXMuY2FudmFzQ3JvcHBlZCA9IGNhbnZhcwogICAgICAvLyB2YXIgaW1nU3RyaW5nID0gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvcG5nIik7CiAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjcm9wcGVkSW1hZ2UnKS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGltZ1N0cmluZyk7CgkJfSwKCiAgICBjbGlja1NDKCl7CiAgICAgIGh0bWwyY2FudmFzKGRvY3VtZW50LmJvZHkpLnRoZW4oY2FudmFzID0+IHsKICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coImhlbGxvIikKICAgICAgICAgICAgICAgICAgLy8gdmFyIGltZ1N0cmluZyA9IGNhbnZhcy50b0RhdGFVUkwoImltYWdlL3BuZyIpOwogICAgICAgICAgICAgICAgICB0aGlzLnNjcmVlbnNob3QgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgMSk7CiAgICAgICAgICAgICAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUltZycpLnNldEF0dHJpYnV0ZSgnc3JjJywgaW1nU3RyaW5nKTsKICAgICAgICAgICAgICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215SW1nJykuc3JjKGltZyk7CiAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGltZ1N0cmluZykKICAgICAgICAgICAgICAgICAgLy8gd2luZG93Lm9wZW4oaW1nU3RyaW5nKTsKICAgICAgICAgICAgICAgICAgLy8gdmFyIGltZyA9IG5ldyBJbWFnZSgpCiAgICAgICAgICAgICAgICAgIC8vIGltZy5zcmMgPSAgaW1nU3RyaW5nCiAgICAgICAgICAgICAgICAgIC8vIGltZy5oZWlnaHQgPSAxMDAwCiAgICAgICAgICAgICAgICAgIC8vIGltZy53aWR0aCA9IDEwMDAKICAgICAgICAgICAgICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215Q2FudmFzJykuYXBwZW5kQ2hpbGQoaW1nKTsKICAgICAgICAgICAgICAgICAgLy8gZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpOyAgIAogICAgICAgIH0pOwogIAogICAgfSwKCiAgICBkZWxldGVJdGVtKGluZGV4KXsKICAgICAgdGhpcy5yZXNwb25zZURhdGEuc3BsaWNlKGluZGV4LDEpCiAgICAgIC8vIGNvbnNvbGUubG9nKHByb3BlcnR5TmFtZSkKICAgICAgLy8gZGVsZXRlIHRoaXMucmVzcG9uc2VEYXRhW3Byb3BlcnR5TmFtZV07CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucmVzcG9uc2VEYXRhKQogICAgfSwKCiAgICBzcGVlY2hFbmQoe3NlbnRlbmNlcywgdGV4dH0pIHsKICAgICAgY29uc29sZS5sb2coJ3RleHQnLCB0ZXh0KQogICAgICBjb25zb2xlLmxvZygnc2VudGVuY2VzJywgc2VudGVuY2VzKQogICAgICB0aGlzLnNlbnRlbmNlcyA9IHNlbnRlbmNlcwogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSB0ZXh0CiAgICB9LAoKICAgIHN1Ym1pdEZlZWRiYWNrRm9ybSgpIHsKICAgICAgCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmVlZGJhY2tUZXh0QXJlYSkKICAgICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7Q29tbWVudDogdGhpcy5mZWVkYmFja1RleHRBcmVhfSkKCiAgICAgIHRoaXMuZmVlZGJhY2tUZXh0QXJlYSA9ICcnCiAgICAgIGNvbnNvbGUubG9nKCJGb3JtIHN1Ym1pdHRlZCIpCgogICAgICBBV1MuY29uZmlnLnVwZGF0ZSh7CiAgICAgIHJlZ2lvbjogImFwLXNvdXRoLTEiLAogICAgICBjcmVkZW50aWFsczogbmV3IEFXUy5Db2duaXRvSWRlbnRpdHlDcmVkZW50aWFscyh7CiAgICAgICAgSWRlbnRpdHlQb29sSWQ6ICJhcC1zb3V0aC0xOjk0NjA3NWRjLTE2NTYtNDRkMS05MmNkLTRjOGFhNmEyZWMwOCIKICAgICAgfSksfSk7CgogICAgICBsZXQgczMgPSBuZXcgQVdTLlMzKCk7CiAgICAgIAogICAgICBpZiAodGhpcy5zZWxlY3RlZEltYWdlKXsKCiAgICAgICAgdmFyIGZpbGVQYXRoID0gdGhpcy5zZWxlY3RlZEltYWdlLm5hbWU7CiAgICAgIAogICAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgICAgICJCb2R5IjogdGhpcy5zZWxlY3RlZEltYWdlLAogICAgICAgICAgICAiQnVja2V0IjogImZlZWRiYWNrdG9vbGJ1Y2tldCIsCiAgICAgICAgICAgICJLZXkiOiBmaWxlUGF0aCwKICAgICAgICAgICAgIkFDTCI6ICJwdWJsaWMtcmVhZCIsIC8qIFRoaXMgbWFrZXMgdGhlIGltYWdlIHB1YmxpYywgYnV0IG9ubHkgd29ya3MgaWYgeW91ciBTMyBidWNrZXQgYWxsb3dzIHB1YmxpYyBhY2Nlc3MgKi8KICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjogdGhpcy5zZWxlY3RlZEltYWdlLnR5cGUgLyogVGhpcyBpcyBpbXBvcnRhbnQgdG8gaGFuZGxlIGpwZyB2cyBwbmcgZXRjICovCiAgICAgICAgfTsKCiAgICAgICAgczMudXBsb2FkKHBhcmFtcywgKGVyciwgZGF0YSkgPT4gewogICAgICAgICAgICBpZiAoZXJyKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yIiwgZXJyKTsKICAgICAgICAgICAgfSBpZiAoZGF0YSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJVcGxvYWQgU3VjY2VzcyIsIGRhdGEuTG9jYXRpb24pOwogICAgICAgICAgICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goe0ltYWdlTG9jYXRpb246IGRhdGEuTG9jYXRpb259KQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgfQoKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNlbGVjdGVkSW1hZ2VJZCIpLnZhbHVlID0gbnVsbDsKCiAgICB9LAogICAgCiAgICBvbkltYWdlU2VsZWN0ZWQoZSkgewogICAgICB0aGlzLnNlbGVjdGVkSW1hZ2UgPSBlLnRhcmdldC5maWxlc1swXQogICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkSW1hZ2UpCiAgICB9CgoKICB9CgoKCn0KCg=="},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"FeedbackForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n              <div class=\"field\" >\n                  <label class=\"label\"> \n                    <strong> Comments: </strong> \n                    <span> \n                      ({{ commentCharacterCount }}/{{ max_len }}) \n                      <span v-if=\"isDisabled\" class=\"max_len_tag\">\n                        - Maximum length reached !\n                      </span>\n                    </span>\n\n                  </label>\n\n                  <div class=\"control\">\n                      <textarea id=\"textAreaBox\" rows=\"5\" cols=\"80\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\" placeholder=\"We would love to hear your feedback. but please do not share any sensitive personal information.\"/>\n                      <!-- <Speech2Text @speechend=\"speechEnd\" /> -->\n                      <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                            <!-- {{sentences}} -->\n                  </div>\n                  <input type=\"file\" id=\"selectedImageId\" @change=\"onImageSelected\" accept=\"image/*\" >\n\n                  <b-button @click=\"clickSC(); $bvModal.show('bv-modal-show-screenshot');\"> Take screenshot </b-button>\n\n                  <b-modal id=\"bv-modal-show-screenshot\" size=\"xl\" hide-footer>\n                    <template #modal-title>\n                      Screenshot\n                    </template>\n                    <div class=\"d-block text-center\">\n                      <!-- <img id=\"myImg\" width=\"1050\" height=\"1000\" :src=\"img\"> -->\n                      <cropper\n                          :src=\"screenshot\"\n                          @change=\"change\"\n                        />\n                      <!-- <div id=\"myCanvas\"/> -->\n                    </div>\n                    <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-screenshot')\">Close</b-button>\n                    <b-button class=\"mt-3\" variant='outline-danger' block @click=\"cropImage();$bvModal.hide('bv-modal-show-screenshot')\">Crop and Save</b-button>\n\n                  </b-modal>\n\n                  <b-button class=\"reviewbutton\" @click=\"$bvModal.show('bv-modal-review-data')\">REVIEW DATA</b-button>\n\n                  <b-modal id=\"bv-modal-review-data\" hide-footer>\n                    <template #modal-title>\n                      Review Data\n                    </template>\n                    <div class=\"d-block text-center\">\n                      <b-list-group v-for=\"(value, index) in responseData\" :key=\"index\">\n  \n                        <b-list-group-item> <strong> {{ Object.keys(value)[0] }} </strong> : {{ value[Object.keys(value)[0]] }} <button class=\"btn btn-danger\" v-on:click=\"deleteItem(index)\" style=\"float: right;\">x</button></b-list-group-item>\n\n                      </b-list-group>\n                    </div>\n                    <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-review-data')\">Close</b-button>\n                  </b-modal>\n\n                  <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" >SUBMIT</button>\n              </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- {{ responseData }} -->\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n\n    <br/>\n    <br/>\n\n    <!-- <img id=\"croppedImage\"/> -->\n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\n// import Speech2Text from \"./STT\"\nimport html2canvas from 'html2canvas';\nimport { Cropper } from 'vue-advanced-cropper';\nimport 'vue-advanced-cropper/dist/style.css';\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    // Speech2Text\n    Cropper\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      selectedImage: null,\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      screenshot: null,\n      canvasCropped: null\n      }\n  },\n\n  mounted() {\n\n    this.responseData.push({SiteName: window.location.href})\n    this.responseData.push({Resolution: String(window.screen.width) + 'x' + String(window.screen.height) })\n    this.responseData.push({ userAgent: navigator.userAgent})\n    this.responseData.push({ 'ACCEPT LANGUAGE': navigator.language})\n    if (document.referrer){\n      this.responseData.push({ 'REFERRER': document.referrer})\n    }\n\n    var i;var pluginsData = \"\";\n    for (i = 0; i < navigator.plugins.length; i++) {\n      pluginsData += navigator.plugins[i].name + \" - \"+ navigator.plugins[i].filename + \". \" ;\n    }\n\n    this.responseData.push({Plugins: pluginsData})\n\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    isDisabled(){\n      return this.feedbackTextArea.length==this.max_len;\n    }\n\n  },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    cropImage(){\n      console.log('HCELB')\n      console.log(this.canvasCropped)\n    },\n\n    change({ canvas }) {\n      // console.log(canvas);\n      this.canvasCropped = canvas\n      // var imgString = canvas.toDataURL(\"image/png\");\n      // document.getElementById('croppedImage').setAttribute('src', imgString);\n\t\t},\n\n    clickSC(){\n      html2canvas(document.body).then(canvas => {\n                  // console.log(\"hello\")\n                  // var imgString = canvas.toDataURL(\"image/png\");\n                  this.screenshot = canvas.toDataURL('image/jpeg', 1);\n                  // document.getElementById('myImg').setAttribute('src', imgString);\n                  // document.getElementById('myImg').src(img);\n                  // console.log(imgString)\n                  // window.open(imgString);\n                  // var img = new Image()\n                  // img.src =  imgString\n                  // img.height = 1000\n                  // img.width = 1000\n                  // document.getElementById('myCanvas').appendChild(img);\n                  // document.body.appendChild(canvas);   \n        });\n  \n    },\n\n    deleteItem(index){\n      this.responseData.splice(index,1)\n      // console.log(propertyName)\n      // delete this.responseData[propertyName];\n      // console.log(this.responseData)\n    },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    submitFeedbackForm() {\n      \n      console.log(this.feedbackTextArea)\n      this.responseData.push({Comment: this.feedbackTextArea})\n\n      this.feedbackTextArea = ''\n      console.log(\"Form submitted\")\n\n      AWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\n      let s3 = new AWS.S3();\n      \n      if (this.selectedImage){\n\n        var filePath = this.selectedImage.name;\n      \n        var params = {\n            \"Body\": this.selectedImage,\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": this.selectedImage.type /* This is important to handle jpg vs png etc */\n        };\n\n        s3.upload(params, (err, data) => {\n            if (err) {\n              console.log(\"Error\", err);\n            } if (data) {\n              console.log(\"Upload Success\", data.Location);\n              this.responseData.push({ImageLocation: data.Location})\n            }\n          });\n      }\n\n      document.getElementById(\"selectedImageId\").value = null;\n\n    },\n    \n    onImageSelected(e) {\n      this.selectedImage = e.target.files[0]\n      console.log(this.selectedImage)\n    }\n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n.submitbutton, .reviewbutton {\n  background-color: purple;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n\n</style>\n"]}]}