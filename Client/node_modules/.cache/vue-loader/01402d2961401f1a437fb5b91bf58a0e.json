{"remainingRequest":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/src/components/FeedbackForm.vue","mtime":1611896862989},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/TingtunProjects/Feedback-Vue-Express/Client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKaW1wb3J0IEFXUyBmcm9tICJhd3Mtc2RrIjsKaW1wb3J0IFNwZWVjaDJUZXh0IGZyb20gIi4vU1RUIgppbXBvcnQgaHRtbDJjYW52YXMgZnJvbSAnaHRtbDJjYW52YXMnOwppbXBvcnQgeyBDcm9wcGVyIH0gZnJvbSAndnVlLWFkdmFuY2VkLWNyb3BwZXInOwppbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJzsKaW1wb3J0ICd2dWUtYWR2YW5jZWQtY3JvcHBlci9kaXN0L3N0eWxlLmNzcyc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgoKQVdTLmNvbmZpZy51cGRhdGUoewogICAgICByZWdpb246ICJhcC1zb3V0aC0xIiwKICAgICAgY3JlZGVudGlhbHM6IG5ldyBBV1MuQ29nbml0b0lkZW50aXR5Q3JlZGVudGlhbHMoewogICAgICAgIElkZW50aXR5UG9vbElkOiAiYXAtc291dGgtMTo5NDYwNzVkYy0xNjU2LTQ0ZDEtOTJjZC00YzhhYTZhMmVjMDgiCiAgICAgIH0pLH0pOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGZWVkYmFja0Zvcm0nLAoKICBjb21wb25lbnRzOiB7CiAgICBTcGVlY2gyVGV4dCwKICAgIENyb3BwZXIKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmVlZGJhY2tUZXh0QXJlYTogJycsCiAgICAgIHRleHQ6ICcnLAogICAgICBzZW50ZW5jZXM6IG51bGwsCiAgICAgIHJlc3BvbnNlRGF0YTogW10sCiAgICAgIG1heF9sZW46ICc1MDAnLAogICAgICBzY3JlZW5zaG90OiBudWxsLAogICAgICBjYW52YXNDcm9wcGVkOiBudWxsLAogICAgICBpbWFnZVVSTDogJycsCiAgICAgIGRpc21pc3NDb3VudERvd246IDAsCiAgICAgIGRpc21pc3NTZWNzOiAyCiAgICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtTaXRlTmFtZTogd2luZG93LmxvY2F0aW9uLmhyZWZ9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7UmVzb2x1dGlvbjogU3RyaW5nKHdpbmRvdy5zY3JlZW4ud2lkdGgpICsgJ3gnICsgU3RyaW5nKHdpbmRvdy5zY3JlZW4uaGVpZ2h0KSB9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7IHVzZXJBZ2VudDogbmF2aWdhdG9yLnVzZXJBZ2VudH0pCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgJ0FDQ0VQVCBMQU5HVUFHRSc6IG5hdmlnYXRvci5sYW5ndWFnZX0pCiAgICBpZiAoZG9jdW1lbnQucmVmZXJyZXIpewogICAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgJ1JFRkVSUkVSJzogZG9jdW1lbnQucmVmZXJyZXJ9KQogICAgfQoKICAgIHZhciBpO3ZhciBwbHVnaW5zRGF0YSA9ICIiOwogICAgZm9yIChpID0gMDsgaSA8IG5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgIHBsdWdpbnNEYXRhICs9IG5hdmlnYXRvci5wbHVnaW5zW2ldLm5hbWUgKyAiIC0gIisgbmF2aWdhdG9yLnBsdWdpbnNbaV0uZmlsZW5hbWUgKyAiLiAiIDsKICAgIH0KCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtQbHVnaW5zOiBwbHVnaW5zRGF0YX0pCgogIH0sCgogIGNvbXB1dGVkOiB7CgogICAgY29tbWVudENoYXJhY3RlckNvdW50KCkgewogICAgICByZXR1cm4gdGhpcy5mZWVkYmFja1RleHRBcmVhLmxlbmd0aDsKCiAgICB9LAogICAgbGVuZ3RoRXhjZWVkZWQoKXsKICAgICAgcmV0dXJuIHRoaXMuZmVlZGJhY2tUZXh0QXJlYS5sZW5ndGg9PXRoaXMubWF4X2xlbjsKICAgIH0sCiAgICBpc0hpZGRlbigpewogICAgICByZXR1cm4gdGhpcy5pbWFnZVVSTCAhPSAnJwogICAgfQogICAgCgogIH0sCgogIG1ldGhvZHM6IHsKCiAgICAvLyBzZW50VGV4dHModGV4dCl7CiAgICAvLyAgIGNvbnNvbGUubG9nKHRleHQpCiAgICAvLyB9LAoKICAgIGNvdW50RG93bkNoYW5nZWQoZGlzbWlzc0NvdW50RG93bikgewogICAgICAgIHRoaXMuZGlzbWlzc0NvdW50RG93biA9IGRpc21pc3NDb3VudERvd24KICAgICAgfSwKCiAgICByZW1vdmVJbWFnZSgpewogICAgICB0aGlzLmltYWdlVVJMID0gJycKICAgIH0sCgogICAgY3JvcEltYWdlKCl7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJDcm9wcGVkIEltYWdlOiIsdGhpcy5jYW52YXNDcm9wcGVkKQogICAgICB0aGlzLmltYWdlVVJMID0gdGhpcy5jYW52YXNDcm9wcGVkLnRvRGF0YVVSTCgnaW1hZ2UvanBlZycsIDEpCiAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWxlLXVwbG9hZC1pbWFnZSIpLnNldEF0dHJpYnV0ZSgnc3JjJywgdGhpcy5jYW52YXNDcm9wcGVkLnRvRGF0YVVSTCgnaW1hZ2UvanBlZycsIDEpKTsKICAgIH0sCgogICAgY2hhbmdlKHsgY2FudmFzIH0pIHsKICAgICAgdGhpcy5jYW52YXNDcm9wcGVkID0gY2FudmFzCiAgICAgIC8vIHZhciBpbWdTdHJpbmcgPSBjYW52YXMudG9EYXRhVVJMKCJpbWFnZS9wbmciKTsKICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nyb3BwZWRJbWFnZScpLnNldEF0dHJpYnV0ZSgnc3JjJywgaW1nU3RyaW5nKTsKCQl9LAoKICAgIGNsaWNrU0MoKXsKICAgICAgaHRtbDJjYW52YXMoZG9jdW1lbnQuYm9keSkudGhlbihjYW52YXMgPT4gewoKICAgICAgICB0aGlzLnNjcmVlbnNob3QgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgMSk7CiAgICAgICAgfSk7CiAgCiAgICB9LAoKICAgIGRlbGV0ZUl0ZW0oaW5kZXgpewogICAgICB0aGlzLnJlc3BvbnNlRGF0YS5zcGxpY2UoaW5kZXgsMSkKICAgIH0sCgogICAgZGVsZXRlQ29tbWVudCgpewogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSAnJwogICAgfSwKCiAgICBzaG93QWxlcnQoKSB7CiAgICAgICAgdGhpcy5kaXNtaXNzQ291bnREb3duID0gdGhpcy5kaXNtaXNzU2VjcwogICAgICB9LAoKICAgIHNwZWVjaEVuZCh7c2VudGVuY2VzLCB0ZXh0fSkgewogICAgICBjb25zb2xlLmxvZygndGV4dCcsIHRleHQpCiAgICAgIGNvbnNvbGUubG9nKCdzZW50ZW5jZXMnLCBzZW50ZW5jZXMpCiAgICAgIHRoaXMuc2VudGVuY2VzID0gc2VudGVuY2VzCiAgICAgIHRoaXMuZmVlZGJhY2tUZXh0QXJlYSA9IHRleHQKICAgIH0sCgogICAgYXN5bmMgc3VibWl0RmVlZGJhY2tGb3JtKCkgewogICAgICAKICAgICAgY29uc29sZS5sb2coIkZvcm0gc3VibWl0dGVkIikKICAgICAgCiAgICAgIGlmICh0aGlzLmltYWdlVVJMKXsKCiAgICAgICAgbGV0IHMzID0gbmV3IEFXUy5TMygpOwoKICAgICAgICB2YXIgZmlsZVBhdGggPSB1dWlkdjQoKTsKICAgICAgCiAgICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICAgICAgIkJvZHkiOiBCdWZmZXIuZnJvbSh0aGlzLmltYWdlVVJMLnJlcGxhY2UoL15kYXRhOmltYWdlXC9cdys7YmFzZTY0LC8sICIiKSwnYmFzZTY0JyksCiAgICAgICAgICAgICJCdWNrZXQiOiAiZmVlZGJhY2t0b29sYnVja2V0IiwKICAgICAgICAgICAgIktleSI6IGZpbGVQYXRoLAogICAgICAgICAgICAiQ29udGVudEVuY29kaW5nIjogJ2Jhc2U2NCcsCiAgICAgICAgICAgICJBQ0wiOiAicHVibGljLXJlYWQiLCAvKiBUaGlzIG1ha2VzIHRoZSBpbWFnZSBwdWJsaWMsIGJ1dCBvbmx5IHdvcmtzIGlmIHlvdXIgUzMgYnVja2V0IGFsbG93cyBwdWJsaWMgYWNjZXNzICovCiAgICAgICAgICAgICJDb250ZW50VHlwZSI6ICdpbWFnZS9qcGcnIC8qIFRoaXMgaXMgaW1wb3J0YW50IHRvIGhhbmRsZSBqcGcgdnMgcG5nIGV0YyAqLwogICAgICAgIH07CgogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBzM1Jlc3BvbnNlID0gYXdhaXQgczMudXBsb2FkKHBhcmFtcykucHJvbWlzZSgpOwogICAgICAgICAgY29uc29sZS5sb2coczNSZXNwb25zZSk7CiAgICAgICAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtJbWFnZUxvY2F0aW9uOiBzM1Jlc3BvbnNlLkxvY2F0aW9ufSkKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIH0KCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmZlZWRiYWNrVGV4dEFyZWEpewogICAgICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goe0NvbW1lbnQ6IHRoaXMuZmVlZGJhY2tUZXh0QXJlYX0pCiAgICAgIH0KCiAgICAgIGF4aW9zLnBvc3QocHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfRU5EUE9JTlRfVE9fU0VORF9GRUVEQkFDSywgCiAgICAgICAgICB0aGlzLnJlc3BvbnNlRGF0YQogICAgICAgICAgKQogICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgdGhpcy5zaG93QWxlcnQoKQogICAgICAgICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSAnJwogICAgICAgICAgICB0aGlzLnJlc3BvbnNlRGF0YSA9IFtdCiAgICAgICAgICB9LCAoZXJyb3IpID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAvLyB0aHJvdyBlcnJvcjsKICAgICAgICAgIH0pOwoKICAgICAgY29uc29sZS5sb2codGhpcy5yZXNwb25zZURhdGEpCgogICAgICAKICAgICAgIC8vIHJlc3BvbnNlIHN1Y2Nlc3V1bHkgc3VibWl0dGVkCiAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzZWxlY3RlZEltYWdlSWQiKS52YWx1ZSA9IG51bGw7CgogICAgfSwKICAgIAogICAgYXN5bmMgb25JbWFnZVNlbGVjdGVkKGV2ZW50KSB7CiAgICAgICAgLy8gdGhpcy5pbWFnZVVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZS50YXJnZXQuZmlsZXNbMF0pCiAgICAgICAgLy8gY29uc3QgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwoKICAgICAgICAvLyBjb25zb2xlLmxvZyhldmVudC50YXJnZXQuZmlsZXNbMF0pCgogICAgICAgIGNvbnN0IHJlYWRVcGxvYWRlZEZpbGVBc1RleHQgPSAoaW5wdXRGaWxlKSA9PiB7CiAgICAgICAgICBjb25zdCB0ZW1wb3JhcnlGaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgICAgICAgICB0ZW1wb3JhcnlGaWxlUmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXNvbHZlKHRlbXBvcmFyeUZpbGVSZWFkZXIucmVzdWx0KTsKICAgICAgICAgICAgfSk7IAogICAgICAgICAgdGVtcG9yYXJ5RmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKCBpbnB1dEZpbGUgKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICB9OwoKICAgICAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwoKICAgICAgICB0cnkgewogICAgICAgICAgY29uc3QgZmlsZUNvbnRlbnRzID0gYXdhaXQgcmVhZFVwbG9hZGVkRmlsZUFzVGV4dChmaWxlKSAgCiAgICAgICAgICB0aGlzLmltYWdlVVJMID0gZmlsZUNvbnRlbnRzCiAgICAgICAgICAvLyBjb25zb2xlLmxvZygiRkMiLHRoaXMuaW1hZ2VVUkwpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIGNvbnNvbGUud2FybihlLm1lc3NhZ2UpCiAgICAgICAgfQoKICAgICAgICAvLyBjb25zb2xlLmxvZygid2RoYmZsanNmZ2RuIiwgdGhpcy5pbWFnZVVSTCkKCiAgICB9LAoKICAgIAoKCiAgfQoKCgp9Cgo="},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;AAKA;;;;AAIA","file":"FeedbackForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <b-alert\n      :show=\"dismissCountDown\"\n      dismissible\n      fade\n      variant=\"success\"\n      @dismiss-count-down=\"countDownChanged\"\n    >\n      Response successfully submitted !\n    </b-alert>\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n              <div class=\"field\" >\n                  <label class=\"label\"> \n                    <strong> Comments: </strong> \n                    <span> \n                      ({{ commentCharacterCount }}/{{ max_len }}) \n                      <span v-if=\"lengthExceeded\" class=\"max_len_tag\">\n                        - Maximum length reached !\n                      </span>\n                    </span>\n                  </label>\n\n                  <div class=\"control\">\n                      <textarea id=\"textAreaBox\" rows=\"5\" cols=\"80\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\" placeholder=\"We would love to hear your feedback. but please do not share any sensitive personal information.\"/>\n                      <br/>\n                      <Speech2Text @speechend=\"speechEnd\" />\n                      <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                            <!-- {{sentences}} -->\n                  </div>\n\n                  <div class=\"action-buttons-tab pull-right\">\n                    \n                    <b-button id=\"uploadimagebutton\" @click=\"$bvModal.show('bv-modal-show-uploadimagebutton');\"> Upload Image </b-button>\n                    \n                    <b-modal id=\"bv-modal-show-uploadimagebutton\" size=\"xl\" hide-footer>\n                      <template #modal-title>\n                        Upload Image\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <input type=\"file\" id=\"selectedImageId\" @change=\"onImageSelected\" accept=\"image/*\" >\n                        <strong style=\"margin-left: 0px;margin-right:20px\">OR</strong>\n                        <b-button id=\"screenshotbutton\" @click=\"clickSC(); $bvModal.show('bv-modal-show-screenshot');\"> Take screenshot </b-button>\n                        \n                        <br/>\n                        <br/>\n                        <div class=\"preview-tab\" v-if=\"isHidden\">\n                          <img id=\"file-upload-image\" :src=\"imageURL\" alt=\"\" />\n                        </div>\n                      </div>\n                      <b-button class=\"mt-3\" block variant='outline-danger' @click=\"removeImage\">Remove Preview Image</b-button>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-uploadimagebutton')\">Close</b-button>\n\n                    </b-modal>\n\n                    <b-modal id=\"bv-modal-show-screenshot\" size=\"xl\" hide-footer>\n                      <template #modal-title>\n                        Screenshot\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <cropper\n                            :src=\"screenshot\"\n                            @change=\"change\"\n                            :stencil-props=\"{\n                              aspectRatio: 16/9,\n                            }\"\n                          />\n                      </div>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-screenshot')\">Close</b-button>\n                      <b-button class=\"mt-3\" variant='outline-danger' block @click=\"cropImage();$bvModal.hide('bv-modal-show-screenshot')\">Crop and Save</b-button>\n\n                    </b-modal>\n\n                    <b-button class=\"reviewbutton\" @click=\"$bvModal.show('bv-modal-review-data')\">Review Data</b-button>\n\n                    <b-modal id=\"bv-modal-review-data\" hide-footer>\n                      <template #modal-title>\n                        Review Data\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <b-list-group v-for=\"(value, index) in responseData\" :key=\"index\">\n    \n                          <b-list-group-item align=\"left\" > <strong> {{ Object.keys(value)[0] }} </strong> : {{ value[Object.keys(value)[0]] }} <button class=\"btn btn-danger\" v-on:click=\"deleteItem(index)\" style=\"float: right;\">x</button></b-list-group-item>\n\n                        </b-list-group>\n\n                          <b-list-group-item align=\"left\" v-if=\"this.feedbackTextArea\" style=\"padding:20px\"> <strong> Comment </strong> : {{ this.feedbackTextArea }} <button class=\"btn btn-danger\" v-on:click=\"deleteComment()\" style=\"float: right; \">x</button></b-list-group-item>\n\n                          <b-list-group-item align=\"left\" v-if=\"this.imageURL\"> <strong> Image URL</strong> : <img id=\"file-upload-image\" :src=\"imageURL\" alt=\"\" /> <button class=\"btn btn-danger\" v-on:click=\"removeImage()\" style=\"float: right;\">x</button></b-list-group-item>\n\n\n                      </div>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-review-data')\">Close</b-button>\n                    </b-modal>\n\n                    <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" disabled>SUBMIT</button>\n                </div>\n              </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- {{ responseData }} -->\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n\n    <br/>\n    <br/>\n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\nimport Speech2Text from \"./STT\"\nimport html2canvas from 'html2canvas';\nimport { Cropper } from 'vue-advanced-cropper';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'vue-advanced-cropper/dist/style.css';\nimport axios from 'axios';\n\n\nAWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    Speech2Text,\n    Cropper\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      screenshot: null,\n      canvasCropped: null,\n      imageURL: '',\n      dismissCountDown: 0,\n      dismissSecs: 2\n      }\n  },\n\n  mounted() {\n    \n    this.responseData.push({SiteName: window.location.href})\n    this.responseData.push({Resolution: String(window.screen.width) + 'x' + String(window.screen.height) })\n    this.responseData.push({ userAgent: navigator.userAgent})\n    this.responseData.push({ 'ACCEPT LANGUAGE': navigator.language})\n    if (document.referrer){\n      this.responseData.push({ 'REFERRER': document.referrer})\n    }\n\n    var i;var pluginsData = \"\";\n    for (i = 0; i < navigator.plugins.length; i++) {\n      pluginsData += navigator.plugins[i].name + \" - \"+ navigator.plugins[i].filename + \". \" ;\n    }\n\n    this.responseData.push({Plugins: pluginsData})\n\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    lengthExceeded(){\n      return this.feedbackTextArea.length==this.max_len;\n    },\n    isHidden(){\n      return this.imageURL != ''\n    }\n    \n\n  },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    countDownChanged(dismissCountDown) {\n        this.dismissCountDown = dismissCountDown\n      },\n\n    removeImage(){\n      this.imageURL = ''\n    },\n\n    cropImage(){\n      // console.log(\"Cropped Image:\",this.canvasCropped)\n      this.imageURL = this.canvasCropped.toDataURL('image/jpeg', 1)\n      // document.getElementById(\"file-upload-image\").setAttribute('src', this.canvasCropped.toDataURL('image/jpeg', 1));\n    },\n\n    change({ canvas }) {\n      this.canvasCropped = canvas\n      // var imgString = canvas.toDataURL(\"image/png\");\n      // document.getElementById('croppedImage').setAttribute('src', imgString);\n\t\t},\n\n    clickSC(){\n      html2canvas(document.body).then(canvas => {\n\n        this.screenshot = canvas.toDataURL('image/jpeg', 1);\n        });\n  \n    },\n\n    deleteItem(index){\n      this.responseData.splice(index,1)\n    },\n\n    deleteComment(){\n      this.feedbackTextArea = ''\n    },\n\n    showAlert() {\n        this.dismissCountDown = this.dismissSecs\n      },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    async submitFeedbackForm() {\n      \n      console.log(\"Form submitted\")\n      \n      if (this.imageURL){\n\n        let s3 = new AWS.S3();\n\n        var filePath = uuidv4();\n      \n        var params = {\n            \"Body\": Buffer.from(this.imageURL.replace(/^data:image\\/\\w+;base64,/, \"\"),'base64'),\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ContentEncoding\": 'base64',\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": 'image/jpg' /* This is important to handle jpg vs png etc */\n        };\n\n        try {\n          const s3Response = await s3.upload(params).promise();\n          console.log(s3Response);\n          this.responseData.push({ImageLocation: s3Response.Location})\n        } catch (error) {\n          console.log(error);\n        }\n\n      }\n\n      if (this.feedbackTextArea){\n        this.responseData.push({Comment: this.feedbackTextArea})\n      }\n\n      axios.post(process.env.VUE_APP_API_ENDPOINT_TO_SEND_FEEDBACK, \n          this.responseData\n          )\n          .then((response) => {\n            console.log(response);\n            this.showAlert()\n            this.feedbackTextArea = ''\n            this.responseData = []\n          }, (error) => {\n            console.log(error);\n            // throw error;\n          });\n\n      console.log(this.responseData)\n\n      \n       // response succesuuly submitted\n      // document.getElementById(\"selectedImageId\").value = null;\n\n    },\n    \n    async onImageSelected(event) {\n        // this.imageURL = URL.createObjectURL(e.target.files[0])\n        // const file = e.target.files[0];\n\n        // console.log(event.target.files[0])\n\n        const readUploadedFileAsText = (inputFile) => {\n          const temporaryFileReader = new FileReader();\n          return new Promise((resolve) => {\n            temporaryFileReader.addEventListener(\"load\", function() {\n              resolve(temporaryFileReader.result);\n            }); \n          temporaryFileReader.readAsDataURL( inputFile );\n              });\n        };\n\n        const file = event.target.files[0];\n\n        try {\n          const fileContents = await readUploadedFileAsText(file)  \n          this.imageURL = fileContents\n          // console.log(\"FC\",this.imageURL);\n        } catch (e) {\n          console.warn(e.message)\n        }\n\n        // console.log(\"wdhbfljsfgdn\", this.imageURL)\n\n    },\n\n    \n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n.submitbutton, .reviewbutton {\n  background-color: purple;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n.preview-tab{\n  display: flex;\n  justify-content: center;\n}\n\n\n#file-upload-image { \n  border: 5px solid #555;\n  margin:20px;\n  width: 200px;\n  height: 200px;\n\n}\n\n.submitbutton:disabled {\n  background-color: #dddddd;\n  background: #dddddd;\n}\n\n</style>\n"]}]}