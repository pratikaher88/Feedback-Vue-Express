{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue","mtime":1611240893531},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKaW1wb3J0IEFXUyBmcm9tICJhd3Mtc2RrIjsKLy8gaW1wb3J0IFNwZWVjaDJUZXh0IGZyb20gIi4vU1RUIgppbXBvcnQgQm93c2VyIGZyb20gImJvd3NlciI7CmltcG9ydCBodG1sMmNhbnZhcyBmcm9tICdodG1sMmNhbnZhcyc7Cgpjb25zdCBicm93c2VyID0gQm93c2VyLmdldFBhcnNlcih3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZlZWRiYWNrRm9ybScsCgogIGNvbXBvbmVudHM6IHsKICAgIC8vIFNwZWVjaDJUZXh0CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZlZWRiYWNrVGV4dEFyZWE6ICcnLAogICAgICBzZWxlY3RlZEltYWdlOiBudWxsLAogICAgICB0ZXh0OiAnJywKICAgICAgc2VudGVuY2VzOiBudWxsLAogICAgICByZXNwb25zZURhdGE6IFtdLAogICAgICBtYXhfbGVuOiAnNTAwJywKICAgICAgc2NyZWVuc2hvdDogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltYWdlJyksCiAgICAgIGNyb3BwZXI6IG51bGwsCgogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtTaXRlTmFtZTogd2luZG93LmxvY2F0aW9uLmhyZWZ9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7QnJvd3Nlck5hbWU6IGJyb3dzZXIuZ2V0QnJvd3NlcigpLm5hbWUgKyAnIDogJyArIGJyb3dzZXIuZ2V0QnJvd3NlcigpLnZlcnNpb259KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7UmVzb2x1dGlvbjogU3RyaW5nKHdpbmRvdy5zY3JlZW4ud2lkdGgpICsgJ3gnICsgU3RyaW5nKHdpbmRvdy5zY3JlZW4uaGVpZ2h0KSB9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7IHVzZXJBZ2VudDogbmF2aWdhdG9yLnVzZXJBZ2VudH0pCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgJ0FDQ0VQVCBMQU5HVUFHRSc6IG5hdmlnYXRvci5sYW5ndWFnZX0pCiAgICBpZiAoZG9jdW1lbnQucmVmZXJyZXIpewogICAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgJ1JFRkVSUkVSJzogZG9jdW1lbnQucmVmZXJyZXJ9KQogICAgfQoKICAgIHZhciBpO3ZhciBwbHVnaW5zRGF0YSA9ICIiOwogICAgZm9yIChpID0gMDsgaSA8IG5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgIHBsdWdpbnNEYXRhICs9IG5hdmlnYXRvci5wbHVnaW5zW2ldLm5hbWUgKyAiIC0gIisgbmF2aWdhdG9yLnBsdWdpbnNbaV0uZmlsZW5hbWUgKyAiLiAiIDsKICAgIH0KCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtQbHVnaW5zOiBwbHVnaW5zRGF0YX0pCgogICAgdmFyIGltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltYWdlJyk7CiAgICAgICAgdGhpcy5jcm9wcGVyID0gbmV3IENyb3BwZXIoaW1hZ2UsIHsKICAgICAgICAgIGFzcGVjdFJhdGlvOiAzLzEsCiAgICAgICAgICBjcm9wQm94UmVzaXphYmxlOiBmYWxzZSwKICAgICAgICAgIHZpZXdNb2RlOiAxLAogICAgICAgICAgY3JvcChldmVudCkgewogICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwueCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC55KTsKICAgICAgICAgIH0sCiAgICAgICAgfSk7CgogICAgLy8gdmFyIHJlcSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgLy8gcmVxLm9wZW4oJ0dFVCcsIGRvY3VtZW50LmxvY2F0aW9uLCBmYWxzZSk7CiAgICAvLyByZXEuc2VuZChudWxsKTsKICAgIC8vIHZhciBoZWFkZXJzID0gcmVxLmdldEFsbFJlc3BvbnNlSGVhZGVycygpLnRvTG93ZXJDYXNlKCk7CiAgICAKICAgIC8vIGNvbnNvbGUubG9nKCJIZWFkZXJzIixoZWFkZXJzKQogICAgLy8gdGhpcy5yZXNwb25zZURhdGEucHVzaCh7UGx1Z2luczogbmF2aWdhdG9yLnBsdWdpbnNbMV0ubmFtZX0pCgoKICB9LAoKICBjb21wdXRlZDogewoKICAgIGNvbW1lbnRDaGFyYWN0ZXJDb3VudCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmVlZGJhY2tUZXh0QXJlYS5sZW5ndGg7CgogICAgfSwKICAgIGlzRGlzYWJsZWQoKXsKICAgICAgcmV0dXJuIHRoaXMuZmVlZGJhY2tUZXh0QXJlYS5sZW5ndGg9PXRoaXMubWF4X2xlbjsKICAgIH0KCiAgfSwKCiAgbWV0aG9kczogewoKICAgIC8vIHNlbnRUZXh0cyh0ZXh0KXsKICAgIC8vICAgY29uc29sZS5sb2codGV4dCkKICAgIC8vIH0sCgogICAgY2xpY2tTQygpewogICAgICBodG1sMmNhbnZhcyhkb2N1bWVudC5ib2R5KS50aGVuKGNhbnZhcyA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJoZWxsbyIpCiAgICAgICAgICAgICAgICAgIC8vIHZhciBpbWdTdHJpbmcgPSBjYW52YXMudG9EYXRhVVJMKCJpbWFnZS9wbmciKTsKICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coaW1nU3RyaW5nKQogICAgICAgICAgICAgICAgICAvLyB3aW5kb3cub3BlbihpbWdTdHJpbmcpOwogICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7ICAgCiAgICAgICAgfSk7CiAgICAgIC8vIGh0bWwyY2FudmFzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250cm9sJyksewogICAgICAvLyAgICAgICAgICAgb25yZW5kZXJlZDogZnVuY3Rpb24gKGNhbnZhcykgeyAgICAKICAgICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coImhlbGxvIikKICAgICAgLy8gICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpOyAgICAgICAgICAgICAKICAgICAgLy8gICAgICAgICAgICAgLy8gdmFyIGltZ1N0cmluZyA9IGNhbnZhcy50b0RhdGFVUkwoImltYWdlL3BuZyIpOwogICAgICAvLyAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhpbWdTdHJpbmcpOwogICAgICAvLyAgICAgICAgICAgICAvLyB3aW5kb3cub3BlbihpbWdTdHJpbmcpOyAgICAgICAgICAgICAgICAgIAogICAgICAvLyAgICAgICB9CiAgICAgIC8vICAgfSk7CgogICAgfSwKCiAgICBkZWxldGVJdGVtKGluZGV4KXsKICAgICAgdGhpcy5yZXNwb25zZURhdGEuc3BsaWNlKGluZGV4LDEpCiAgICAgIC8vIGNvbnNvbGUubG9nKHByb3BlcnR5TmFtZSkKICAgICAgLy8gZGVsZXRlIHRoaXMucmVzcG9uc2VEYXRhW3Byb3BlcnR5TmFtZV07CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucmVzcG9uc2VEYXRhKQogICAgfSwKCiAgICBzcGVlY2hFbmQoe3NlbnRlbmNlcywgdGV4dH0pIHsKICAgICAgY29uc29sZS5sb2coJ3RleHQnLCB0ZXh0KQogICAgICBjb25zb2xlLmxvZygnc2VudGVuY2VzJywgc2VudGVuY2VzKQogICAgICB0aGlzLnNlbnRlbmNlcyA9IHNlbnRlbmNlcwogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSB0ZXh0CiAgICB9LAoKICAgIHN1Ym1pdEZlZWRiYWNrRm9ybSgpIHsKICAgICAgCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmVlZGJhY2tUZXh0QXJlYSkKICAgICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7Q29tbWVudDogdGhpcy5mZWVkYmFja1RleHRBcmVhfSkKCiAgICAgIHRoaXMuZmVlZGJhY2tUZXh0QXJlYSA9ICcnCiAgICAgIGNvbnNvbGUubG9nKCJGb3JtIHN1Ym1pdHRlZCIpCgogICAgICBBV1MuY29uZmlnLnVwZGF0ZSh7CiAgICAgIHJlZ2lvbjogImFwLXNvdXRoLTEiLAogICAgICBjcmVkZW50aWFsczogbmV3IEFXUy5Db2duaXRvSWRlbnRpdHlDcmVkZW50aWFscyh7CiAgICAgICAgSWRlbnRpdHlQb29sSWQ6ICJhcC1zb3V0aC0xOjk0NjA3NWRjLTE2NTYtNDRkMS05MmNkLTRjOGFhNmEyZWMwOCIKICAgICAgfSksfSk7CgogICAgICBsZXQgczMgPSBuZXcgQVdTLlMzKCk7CiAgICAgIAogICAgICBpZiAodGhpcy5zZWxlY3RlZEltYWdlKXsKCiAgICAgICAgdmFyIGZpbGVQYXRoID0gdGhpcy5zZWxlY3RlZEltYWdlLm5hbWU7CiAgICAgIAogICAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgICAgICJCb2R5IjogdGhpcy5zZWxlY3RlZEltYWdlLAogICAgICAgICAgICAiQnVja2V0IjogImZlZWRiYWNrdG9vbGJ1Y2tldCIsCiAgICAgICAgICAgICJLZXkiOiBmaWxlUGF0aCwKICAgICAgICAgICAgIkFDTCI6ICJwdWJsaWMtcmVhZCIsIC8qIFRoaXMgbWFrZXMgdGhlIGltYWdlIHB1YmxpYywgYnV0IG9ubHkgd29ya3MgaWYgeW91ciBTMyBidWNrZXQgYWxsb3dzIHB1YmxpYyBhY2Nlc3MgKi8KICAgICAgICAgICAgIkNvbnRlbnRUeXBlIjogdGhpcy5zZWxlY3RlZEltYWdlLnR5cGUgLyogVGhpcyBpcyBpbXBvcnRhbnQgdG8gaGFuZGxlIGpwZyB2cyBwbmcgZXRjICovCiAgICAgICAgfTsKCiAgICAgICAgczMudXBsb2FkKHBhcmFtcywgKGVyciwgZGF0YSkgPT4gewogICAgICAgICAgICBpZiAoZXJyKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yIiwgZXJyKTsKICAgICAgICAgICAgfSBpZiAoZGF0YSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJVcGxvYWQgU3VjY2VzcyIsIGRhdGEuTG9jYXRpb24pOwogICAgICAgICAgICAgIHRoaXMucmVzcG9uc2VEYXRhLnB1c2goe0ltYWdlTG9jYXRpb246IGRhdGEuTG9jYXRpb259KQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgfQoKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNlbGVjdGVkSW1hZ2VJZCIpLnZhbHVlID0gbnVsbDsKCiAgICAgIH0sCiAgICAgIG9uSW1hZ2VTZWxlY3RlZChlKSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZEltYWdlID0gZS50YXJnZXQuZmlsZXNbMF0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkSW1hZ2UpCiAgICAgIH0KCgogIH0KCgoKfQoK"},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA","file":"FeedbackForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n              <div class=\"field\" >\n                  <label class=\"label\"> \n                    <strong> Comments: </strong> \n                    <span> \n                      ({{ commentCharacterCount }}/{{ max_len }}) \n                      <span v-if=\"isDisabled\" class=\"max_len_tag\">\n                        - Maximum length reached !\n                      </span>\n                    </span>\n\n                  </label>\n\n                  <div class=\"control\">\n                      <textarea id=\"textAreaBox\" rows=\"5\" cols=\"60\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\" placeholder=\"We would love to hear your feedback. but please do not share any sensitive personal information.\"/>\n                      <!-- <Speech2Text @speechend=\"speechEnd\" /> -->\n                      <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                            <!-- {{sentences}} -->\n                  </div>\n                  <input type=\"file\" id=\"selectedImageId\" @change=\"onImageSelected\">\n\n                  <b-button @click=\"clickSC\"> Take screenshot </b-button>\n\n                  <b-button v-b-modal.modal-review-data>Review Data</b-button>\n\n                  <b-modal id=\"modal-review-data\" title=\"Review Data\">\n\n                    <b-list-group v-for=\"(value, index) in responseData\" :key=\"index\">\n    \n                      <b-list-group-item> <strong> {{ Object.keys(value)[0] }} </strong> : {{ value[Object.keys(value)[0]] }} <button class=\"btn btn-danger\" v-on:click=\"deleteItem(index)\" style=\"float: right;\">x</button></b-list-group-item>\n\n                    </b-list-group>\n\n                    </b-modal>\n\n                  <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" >SUBMIT</button>\n              </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- {{ responseData }} -->\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n\n    <br/>\n    <br/>\n\n    <img id=\"image\" src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/Default-avatar.jpg\">\n\n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\n// import Speech2Text from \"./STT\"\nimport Bowser from \"bowser\";\nimport html2canvas from 'html2canvas';\n\nconst browser = Bowser.getParser(window.navigator.userAgent);\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    // Speech2Text\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      selectedImage: null,\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      screenshot: document.getElementById('image'),\n      cropper: null,\n\n    }\n  },\n\n  mounted() {\n    // this.responseData.push({SiteName: window.location.href})\n    this.responseData.push({BrowserName: browser.getBrowser().name + ' : ' + browser.getBrowser().version})\n    this.responseData.push({Resolution: String(window.screen.width) + 'x' + String(window.screen.height) })\n    this.responseData.push({ userAgent: navigator.userAgent})\n    this.responseData.push({ 'ACCEPT LANGUAGE': navigator.language})\n    if (document.referrer){\n      this.responseData.push({ 'REFERRER': document.referrer})\n    }\n\n    var i;var pluginsData = \"\";\n    for (i = 0; i < navigator.plugins.length; i++) {\n      pluginsData += navigator.plugins[i].name + \" - \"+ navigator.plugins[i].filename + \". \" ;\n    }\n\n    this.responseData.push({Plugins: pluginsData})\n\n    var image = document.getElementById('image');\n        this.cropper = new Cropper(image, {\n          aspectRatio: 3/1,\n          cropBoxResizable: false,\n          viewMode: 1,\n          crop(event) {\n            console.log(event.detail.x);\n            console.log(event.detail.y);\n          },\n        });\n\n    // var req = new XMLHttpRequest();\n    // req.open('GET', document.location, false);\n    // req.send(null);\n    // var headers = req.getAllResponseHeaders().toLowerCase();\n    \n    // console.log(\"Headers\",headers)\n    // this.responseData.push({Plugins: navigator.plugins[1].name})\n\n\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    isDisabled(){\n      return this.feedbackTextArea.length==this.max_len;\n    }\n\n  },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    clickSC(){\n      html2canvas(document.body).then(canvas => {\n                  console.log(\"hello\")\n                  // var imgString = canvas.toDataURL(\"image/png\");\n                  // console.log(imgString)\n                  // window.open(imgString);\n                  document.body.appendChild(canvas);   \n        });\n      // html2canvas(document.querySelector('.control'),{\n      //           onrendered: function (canvas) {    \n      //             console.log(\"hello\")\n      //             document.body.appendChild(canvas);             \n      //             // var imgString = canvas.toDataURL(\"image/png\");\n      //             // console.log(imgString);\n      //             // window.open(imgString);                  \n      //       }\n      //   });\n\n    },\n\n    deleteItem(index){\n      this.responseData.splice(index,1)\n      // console.log(propertyName)\n      // delete this.responseData[propertyName];\n      // console.log(this.responseData)\n    },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    submitFeedbackForm() {\n      \n      console.log(this.feedbackTextArea)\n      this.responseData.push({Comment: this.feedbackTextArea})\n\n      this.feedbackTextArea = ''\n      console.log(\"Form submitted\")\n\n      AWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\n      let s3 = new AWS.S3();\n      \n      if (this.selectedImage){\n\n        var filePath = this.selectedImage.name;\n      \n        var params = {\n            \"Body\": this.selectedImage,\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": this.selectedImage.type /* This is important to handle jpg vs png etc */\n        };\n\n        s3.upload(params, (err, data) => {\n            if (err) {\n              console.log(\"Error\", err);\n            } if (data) {\n              console.log(\"Upload Success\", data.Location);\n              this.responseData.push({ImageLocation: data.Location})\n            }\n          });\n      }\n\n      document.getElementById(\"selectedImageId\").value = null;\n\n      },\n      onImageSelected(e) {\n        this.selectedImage = e.target.files[0]\n        console.log(this.selectedImage)\n      }\n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n\n\n.submitbutton {\n  background-color: purple; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n.upload {\n  background-color: darkgreen; /* Green */\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n\n</style>\n"]}]}