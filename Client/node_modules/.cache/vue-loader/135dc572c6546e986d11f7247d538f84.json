{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/STT.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/STT.vue","mtime":1611075437297},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmxldCBTcGVlY2hSZWNvZ25pdGlvbiA9IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbiB8fCB3aW5kb3cud2Via2l0U3BlZWNoUmVjb2duaXRpb24KbGV0IHJlY29nbml0aW9uID0gU3BlZWNoUmVjb2duaXRpb24/IG5ldyBTcGVlY2hSZWNvZ25pdGlvbigpIDogZmFsc2UKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdTcGVlY2gyVGV4dCcsCiAgICBwcm9wczogewogICAgbGFuZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdlbi1VUycKICAgIH0sCiAgICB0ZXh0OiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIG51bGxdLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBlcnJvcjogZmFsc2UsCiAgICAgIHNwZWFraW5nOiBmYWxzZSwKICAgICAgdG9nZ2xlOiBmYWxzZSwKICAgICAgcnVudGltZVRyYW5zY3JpcHRpb246ICcnLAogICAgICBzZW50ZW5jZXM6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja0NvbXBhdGliaWxpdHkgKCkgewogICAgICBpZiAoIXJlY29nbml0aW9uKSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICdTcGVlY2ggUmVjb2duaXRpb24gaXMgbm90IGF2YWlsYWJsZSBvbiB0aGlzIGJyb3dzZXIuIFBsZWFzZSB1c2UgQ2hyb21lIG9yIEZpcmVmb3gnCiAgICAgIH0KICAgIH0sCiAgICBlbmRTcGVlY2hSZWNvZ25pdGlvbiAoKSB7CiAgICAgIHJlY29nbml0aW9uLnN0b3AoKQogICAgICB0aGlzLnRvZ2dsZSA9IGZhbHNlCiAgICAgIHRoaXMuJGVtaXQoJ3NwZWVjaGVuZCcsIHsKICAgICAgICBzZW50ZW5jZXM6IHRoaXMuc2VudGVuY2VzLAogICAgICAgIHRleHQ6IHRoaXMuc2VudGVuY2VzLmpvaW4oJy4gJykKICAgICAgfSkKICAgIH0sCiAgICBzdGFydFNwZWVjaFJlY29nbml0aW9uICgpIHsKICAgICAgaWYgKCFyZWNvZ25pdGlvbikgewogICAgICAgIHRoaXMuZXJyb3IgPSAnU3BlZWNoIFJlY29nbml0aW9uIGlzIG5vdCBhdmFpbGFibGUgb24gdGhpcyBicm93c2VyLiBQbGVhc2UgdXNlIENocm9tZSBvciBGaXJlZm94JwogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICAgIHRoaXMudG9nZ2xlID0gdHJ1ZQogICAgICByZWNvZ25pdGlvbi5sYW5nID0gdGhpcy5sYW5nCiAgICAgIHJlY29nbml0aW9uLmludGVyaW1SZXN1bHRzID0gdHJ1ZQoKICAgICAgcmVjb2duaXRpb24uYWRkRXZlbnRMaXN0ZW5lcignc3BlZWNoc3RhcnQnLCBmdW5jdGlvbigpIHsKICAgICAgICB0aGlzLnNwZWFraW5nID0gdHJ1ZQogICAgICB9KQoKICAgICAgcmVjb2duaXRpb24uYWRkRXZlbnRMaXN0ZW5lcignc3BlZWNoZW5kJywgZnVuY3Rpb24oKSB7CiAgICAgICAgdGhpcy5zcGVha2luZyA9IGZhbHNlCiAgICAgIH0pCgogICAgICByZWNvZ25pdGlvbi5hZGRFdmVudExpc3RlbmVyKCdyZXN1bHQnLCBldmVudCA9PiB7CiAgICAgICAgY29uc3QgdGV4dCA9IEFycmF5LmZyb20oZXZlbnQucmVzdWx0cykubWFwKHJlc3VsdCA9PiByZXN1bHRbMF0pLm1hcChyZXN1bHQgPT4gcmVzdWx0LnRyYW5zY3JpcHQpLmpvaW4oJycpCiAgICAgICAgdGhpcy5ydW50aW1lVHJhbnNjcmlwdGlvbiA9IHRleHQKICAgICAgICB0aGlzLiRlbWl0KCdzZW50VGV4dHMnLCB0aGlzLnJ1bnRpbWVUcmFuc2NyaXB0aW9uKQogICAgICB9KQoKICAgICAgcmVjb2duaXRpb24uYWRkRXZlbnRMaXN0ZW5lcignZW5kJywgKCkgPT4gewogICAgICAgIGlmICh0aGlzLnJ1bnRpbWVUcmFuc2NyaXB0aW9uICE9PSAnJykgewogICAgICAgICAgdGhpcy5zZW50ZW5jZXMucHVzaCh0aGlzLmNhcGl0YWxpemVGaXJzdExldHRlcih0aGlzLnJ1bnRpbWVUcmFuc2NyaXB0aW9uKSkKICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTp0ZXh0JywgYCR7dGhpcy50ZXh0fSR7dGhpcy5zZW50ZW5jZXMuc2xpY2UoLTEpWzBdfS4gYCkKICAgICAgICB9CiAgICAgICAgdGhpcy5ydW50aW1lVHJhbnNjcmlwdGlvbiA9ICcnCiAgICAgICAgcmVjb2duaXRpb24uc3RvcCgpCiAgICAgICAgLy8gaWYgKHRoaXMudG9nZ2xlKSB7CiAgICAgICAgLy8gICAvLyBrZWVwIGl0IGdvaW5nLgogICAgICAgIC8vICAgcmVjb2duaXRpb24uc3RhcnQoKQogICAgICAgIC8vIH0KICAgICAgfSkKICAgICAgcmVjb2duaXRpb24uc3RhcnQoKQogICAgfSwKICAgIGNhcGl0YWxpemVGaXJzdExldHRlciAoc3RyaW5nKSB7CiAgICAgIHJldHVybiBzdHJpbmcuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHJpbmcuc2xpY2UoMSkKICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy5jaGVja0NvbXBhdGliaWxpdHkoKQogIH0KfQoK"},{"version":3,"sources":["STT.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"STT.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<div>\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\">\n\n<v-card>\n    <v-card-text>\n      <v-layout row wrap justify-space-around>\n        <v-flex xs8 sm9 text-xs-center>\n          <p v-if=\"error\" class=\"grey--text\">{{error}}</p>\n          <p v-else class=\"mb-0\">\n            <span  v-for=\"(sentence,index) in sentences\" v-bind:key=\"index\">\n                \n                <span v-if=\"sentences.length > 0\">\n                    {{sentence}}. \n                </span>\n                \n                </span>\n            <span>{{runtimeTranscription}}</span>\n          </p>\n        </v-flex>\n        <v-flex xs2 sm1 text-xs-center>\n          <v-btn\n            dark\n            @click.stop=\"toggle ? endSpeechRecognition() : startSpeechRecognition()\"\n            icon\n            :color=\"!toggle ? 'grey' : (speaking ? 'red' : 'red darken-3')\"\n            :class=\"{'animated infinite pulse': toggle}\"\n          >\n            <!-- <v-icon>{{toggle ? 'mic_off' : 'mic'}}</v-icon> -->\n\n            <div v-if=\"!toggle\">\n              <i class=\"fa fa-microphone fa-2x\"/>\n            </div>\n            <div v-else>\n              <i class=\"fa fa-microphone-slash fa-2x\"/>\n            </div>\n\n          </v-btn>\n        </v-flex>\n      </v-layout>\n    </v-card-text>\n  </v-card>\n\n</div>\n  \n</template>\n\n<script>\nlet SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nlet recognition = SpeechRecognition? new SpeechRecognition() : false\n\nexport default {\n    name: 'Speech2Text',\n    props: {\n    lang: {\n      type: String,\n      default: 'en-US'\n    },\n    text: {\n      type: [String, null],\n      required: true\n    }\n  },\n  data () {\n    return {\n      error: false,\n      speaking: false,\n      toggle: false,\n      runtimeTranscription: '',\n      sentences: []\n    }\n  },\n  methods: {\n    checkCompatibility () {\n      if (!recognition) {\n        this.error = 'Speech Recognition is not available on this browser. Please use Chrome or Firefox'\n      }\n    },\n    endSpeechRecognition () {\n      recognition.stop()\n      this.toggle = false\n      this.$emit('speechend', {\n        sentences: this.sentences,\n        text: this.sentences.join('. ')\n      })\n    },\n    startSpeechRecognition () {\n      if (!recognition) {\n        this.error = 'Speech Recognition is not available on this browser. Please use Chrome or Firefox'\n        return false\n      }\n      this.toggle = true\n      recognition.lang = this.lang\n      recognition.interimResults = true\n\n      recognition.addEventListener('speechstart', function() {\n        this.speaking = true\n      })\n\n      recognition.addEventListener('speechend', function() {\n        this.speaking = false\n      })\n\n      recognition.addEventListener('result', event => {\n        const text = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('')\n        this.runtimeTranscription = text\n        this.$emit('sentTexts', this.runtimeTranscription)\n      })\n\n      recognition.addEventListener('end', () => {\n        if (this.runtimeTranscription !== '') {\n          this.sentences.push(this.capitalizeFirstLetter(this.runtimeTranscription))\n          this.$emit('update:text', `${this.text}${this.sentences.slice(-1)[0]}. `)\n        }\n        this.runtimeTranscription = ''\n        recognition.stop()\n        // if (this.toggle) {\n        //   // keep it going.\n        //   recognition.start()\n        // }\n      })\n      recognition.start()\n    },\n    capitalizeFirstLetter (string) {\n      return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n  },\n  mounted () {\n    this.checkCompatibility()\n  }\n}\n\n</script>\n\n<style>\n\n</style>"]}]}