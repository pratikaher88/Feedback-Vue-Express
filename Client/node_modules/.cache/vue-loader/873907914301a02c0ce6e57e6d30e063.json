{"remainingRequest":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/src/components/FeedbackForm.vue","mtime":1611775728665},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pratikaher/VueProjects/feedbackfrontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKaW1wb3J0IEFXUyBmcm9tICJhd3Mtc2RrIjsKaW1wb3J0IFNwZWVjaDJUZXh0IGZyb20gIi4vU1RUIgppbXBvcnQgaHRtbDJjYW52YXMgZnJvbSAnaHRtbDJjYW52YXMnOwppbXBvcnQgeyBDcm9wcGVyIH0gZnJvbSAndnVlLWFkdmFuY2VkLWNyb3BwZXInOwppbXBvcnQgJ3Z1ZS1hZHZhbmNlZC1jcm9wcGVyL2Rpc3Qvc3R5bGUuY3NzJzsKCkFXUy5jb25maWcudXBkYXRlKHsKICAgICAgcmVnaW9uOiAiYXAtc291dGgtMSIsCiAgICAgIGNyZWRlbnRpYWxzOiBuZXcgQVdTLkNvZ25pdG9JZGVudGl0eUNyZWRlbnRpYWxzKHsKICAgICAgICBJZGVudGl0eVBvb2xJZDogImFwLXNvdXRoLTE6OTQ2MDc1ZGMtMTY1Ni00NGQxLTkyY2QtNGM4YWE2YTJlYzA4IgogICAgICB9KSx9KTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRmVlZGJhY2tGb3JtJywKCiAgY29tcG9uZW50czogewogICAgU3BlZWNoMlRleHQsCiAgICBDcm9wcGVyCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZlZWRiYWNrVGV4dEFyZWE6ICcnLAogICAgICBzZWxlY3RlZEltYWdlOiBudWxsLAogICAgICB0ZXh0OiAnJywKICAgICAgc2VudGVuY2VzOiBudWxsLAogICAgICByZXNwb25zZURhdGE6IFtdLAogICAgICBtYXhfbGVuOiAnNTAwJywKICAgICAgc2NyZWVuc2hvdDogbnVsbCwKICAgICAgY2FudmFzQ3JvcHBlZDogbnVsbCwKICAgICAgaW1hZ2VVUkw6ICcnCiAgICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtTaXRlTmFtZTogd2luZG93LmxvY2F0aW9uLmhyZWZ9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7UmVzb2x1dGlvbjogU3RyaW5nKHdpbmRvdy5zY3JlZW4ud2lkdGgpICsgJ3gnICsgU3RyaW5nKHdpbmRvdy5zY3JlZW4uaGVpZ2h0KSB9KQogICAgdGhpcy5yZXNwb25zZURhdGEucHVzaCh7IHVzZXJBZ2VudDogbmF2aWdhdG9yLnVzZXJBZ2VudH0pCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgJ0FDQ0VQVCBMQU5HVUFHRSc6IG5hdmlnYXRvci5sYW5ndWFnZX0pCiAgICBpZiAoZG9jdW1lbnQucmVmZXJyZXIpewogICAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHsgJ1JFRkVSUkVSJzogZG9jdW1lbnQucmVmZXJyZXJ9KQogICAgfQoKICAgIHZhciBpO3ZhciBwbHVnaW5zRGF0YSA9ICIiOwogICAgZm9yIChpID0gMDsgaSA8IG5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgIHBsdWdpbnNEYXRhICs9IG5hdmlnYXRvci5wbHVnaW5zW2ldLm5hbWUgKyAiIC0gIisgbmF2aWdhdG9yLnBsdWdpbnNbaV0uZmlsZW5hbWUgKyAiLiAiIDsKICAgIH0KCiAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtQbHVnaW5zOiBwbHVnaW5zRGF0YX0pCgogIH0sCgogIGNvbXB1dGVkOiB7CgogICAgY29tbWVudENoYXJhY3RlckNvdW50KCkgewogICAgICByZXR1cm4gdGhpcy5mZWVkYmFja1RleHRBcmVhLmxlbmd0aDsKCiAgICB9LAogICAgbGVuZ3RoRXhjZWVkZWQoKXsKICAgICAgcmV0dXJuIHRoaXMuZmVlZGJhY2tUZXh0QXJlYS5sZW5ndGg9PXRoaXMubWF4X2xlbjsKICAgIH0sCiAgICBpc0hpZGRlbigpewogICAgICByZXR1cm4gdGhpcy5pbWFnZVVSTCAhPSAnJwogICAgfQogICAgCgogIH0sCgogIG1ldGhvZHM6IHsKCiAgICAvLyBzZW50VGV4dHModGV4dCl7CiAgICAvLyAgIGNvbnNvbGUubG9nKHRleHQpCiAgICAvLyB9LAoKICAgIHNlYXJjaChuYW1lS2V5KXsKICAgIGZvciAodmFyIGk9MDsgaSA8IHRoaXMucmVzcG9uc2VEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgIGNvbnNvbGUubG9nKCJzZWFyY2hlZCIsT2JqZWN0LmtleXModGhpcy5yZXNwb25zZURhdGFbaV0pWzBdKQogICAgICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLnJlc3BvbnNlRGF0YVtpXSlbMF0gPT09IG5hbWVLZXkpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKCiAgICByZW1vdmVJbWFnZSgpewogICAgICB0aGlzLmltYWdlVVJMID0gJycKICAgIH0sCgogICAgdXBsb2FkQnV0dG9uUmVzdWx0KCl7CiAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZmlsZS11cGxvYWQtaW1hZ2UiKSl7CiAgICAgICAgY29uc29sZS5sb2coZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZpbGUtdXBsb2FkLWltYWdlIikuZ2V0QXR0cmlidXRlKCdzcmMnKSkKICAgICAgfQogICAgICBlbHNlewogICAgICAgIGNvbnNvbGUubG9nKG51bGwpCiAgICAgIH0KICAgICAgCiAgICB9LAoKICAgIGNyb3BJbWFnZSgpewogICAgICBjb25zb2xlLmxvZygiQ3JvcHBlZCBJbWFnZToiLHRoaXMuY2FudmFzQ3JvcHBlZCkKICAgICAgdGhpcy5pbWFnZVVSTCA9IHRoaXMuY2FudmFzQ3JvcHBlZC50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnLCAxKQogICAgICAvLyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZmlsZS11cGxvYWQtaW1hZ2UiKS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMuY2FudmFzQ3JvcHBlZC50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnLCAxKSk7CiAgICB9LAoKICAgIGNoYW5nZSh7IGNhbnZhcyB9KSB7CiAgICAgIHRoaXMuY2FudmFzQ3JvcHBlZCA9IGNhbnZhcwogICAgICAvLyB2YXIgaW1nU3RyaW5nID0gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvcG5nIik7CiAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjcm9wcGVkSW1hZ2UnKS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGltZ1N0cmluZyk7CgkJfSwKCiAgICBjbGlja1NDKCl7CiAgICAgIGh0bWwyY2FudmFzKGRvY3VtZW50LmJvZHkpLnRoZW4oY2FudmFzID0+IHsKCiAgICAgICAgdGhpcy5zY3JlZW5zaG90ID0gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvanBlZycsIDEpOwogICAgICAgIH0pOwogIAogICAgfSwKCiAgICBkZWxldGVJdGVtKGluZGV4KXsKICAgICAgdGhpcy5yZXNwb25zZURhdGEuc3BsaWNlKGluZGV4LDEpCiAgICB9LAoKICAgIGRlbGV0ZUNvbW1lbnQoKXsKICAgICAgdGhpcy5mZWVkYmFja1RleHRBcmVhID0gJycKICAgIH0sCgogICAgc3BlZWNoRW5kKHtzZW50ZW5jZXMsIHRleHR9KSB7CiAgICAgIGNvbnNvbGUubG9nKCd0ZXh0JywgdGV4dCkKICAgICAgY29uc29sZS5sb2coJ3NlbnRlbmNlcycsIHNlbnRlbmNlcykKICAgICAgdGhpcy5zZW50ZW5jZXMgPSBzZW50ZW5jZXMKICAgICAgdGhpcy5mZWVkYmFja1RleHRBcmVhID0gdGV4dAogICAgfSwKCiAgICBzdWJtaXRGZWVkYmFja0Zvcm0oKSB7CiAgICAgIAogICAgICB0aGlzLmZlZWRiYWNrVGV4dEFyZWEgPSAnJwogICAgICBjb25zb2xlLmxvZygiRm9ybSBzdWJtaXR0ZWQiKQoKICAgICAgbGV0IHMzID0gbmV3IEFXUy5TMygpOwogICAgICAKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRJbWFnZSl7CgogICAgICAgIHZhciBmaWxlUGF0aCA9IHRoaXMuc2VsZWN0ZWRJbWFnZS5uYW1lOwogICAgICAKICAgICAgICB2YXIgcGFyYW1zID0gewogICAgICAgICAgICAiQm9keSI6IHRoaXMuc2VsZWN0ZWRJbWFnZSwKICAgICAgICAgICAgIkJ1Y2tldCI6ICJmZWVkYmFja3Rvb2xidWNrZXQiLAogICAgICAgICAgICAiS2V5IjogZmlsZVBhdGgsCiAgICAgICAgICAgICJBQ0wiOiAicHVibGljLXJlYWQiLCAvKiBUaGlzIG1ha2VzIHRoZSBpbWFnZSBwdWJsaWMsIGJ1dCBvbmx5IHdvcmtzIGlmIHlvdXIgUzMgYnVja2V0IGFsbG93cyBwdWJsaWMgYWNjZXNzICovCiAgICAgICAgICAgICJDb250ZW50VHlwZSI6IHRoaXMuc2VsZWN0ZWRJbWFnZS50eXBlIC8qIFRoaXMgaXMgaW1wb3J0YW50IHRvIGhhbmRsZSBqcGcgdnMgcG5nIGV0YyAqLwogICAgICAgIH07CgogICAgICAgIHMzLnVwbG9hZChwYXJhbXMsIChlcnIsIGRhdGEpID0+IHsKICAgICAgICAgICAgaWYgKGVycikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJFcnJvciIsIGVycik7CiAgICAgICAgICAgIH0gaWYgKGRhdGEpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiVXBsb2FkIFN1Y2Nlc3MiLCBkYXRhLkxvY2F0aW9uKTsKICAgICAgICAgICAgICB0aGlzLnJlc3BvbnNlRGF0YS5wdXNoKHtJbWFnZUxvY2F0aW9uOiBkYXRhLkxvY2F0aW9ufSkKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzZWxlY3RlZEltYWdlSWQiKS52YWx1ZSA9IG51bGw7CgogICAgfSwKICAgIAogICAgb25JbWFnZVNlbGVjdGVkKGUpIHsKICAgICAgdGhpcy5zZWxlY3RlZEltYWdlID0gZS50YXJnZXQuZmlsZXNbMF0KICAgICAgY29uc29sZS5sb2codGhpcy5zZWxlY3RlZEltYWdlKQogICAgICB0aGlzLmltYWdlVVJMID0gVVJMLmNyZWF0ZU9iamVjdFVSTCh0aGlzLnNlbGVjdGVkSW1hZ2UpCiAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWxlLXVwbG9hZC1pbWFnZSIpLnNldEF0dHJpYnV0ZSgnc3JjJywgVVJMLmNyZWF0ZU9iamVjdFVSTCh0aGlzLnNlbGVjdGVkSW1hZ2UpKTsKICAgICAgY29uc29sZS5sb2codGhpcy5pbWFnZVVSTCkKICAgIH0KCgogIH0KCgoKfQoK"},{"version":3,"sources":["FeedbackForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA","file":"FeedbackForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<section id=\"app\" class=\"section\">\n\n    <h1 class=\"title is-1\">\n        Feedback Tool\n    </h1>\n\n    <div class=\"columns\">\n        <div class=\"column\">\n            <form @submit.prevent=\"submitFeedbackForm()\" >\n              <div class=\"field\" >\n                  <label class=\"label\"> \n                    <strong> Comments: </strong> \n                    <span> \n                      ({{ commentCharacterCount }}/{{ max_len }}) \n                      <span v-if=\"lengthExceeded\" class=\"max_len_tag\">\n                        - Maximum length reached !\n                      </span>\n                    </span>\n                  </label>\n\n                  <div class=\"control\">\n                      <textarea id=\"textAreaBox\" rows=\"5\" cols=\"80\" v-model=\"feedbackTextArea\" :maxlength=\"max_len\" placeholder=\"We would love to hear your feedback. but please do not share any sensitive personal information.\"/>\n                      <br/>\n                      <Speech2Text @speechend=\"speechEnd\" />\n                      <!-- <Speech2Text @sentTexts=\"sentTexts\" @speechend=\"speechEnd\" /> -->\n                            <!-- {{sentences}} -->\n                  </div>\n\n                  <div class=\"action-buttons-tab pull-right\">\n                    \n                    <b-button id=\"uploadimagebutton\" @click=\"uploadButtonResult();$bvModal.show('bv-modal-show-uploadimagebutton');\"> Upload Image </b-button>\n                    \n                    <b-modal id=\"bv-modal-show-uploadimagebutton\" size=\"xl\" hide-footer>\n                      <template #modal-title>\n                        Upload Image\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <input type=\"file\" id=\"selectedImageId\" @change=\"onImageSelected\" accept=\"image/*\" >\n                        <strong style=\"margin-left: 0px;margin-right:20px\">OR</strong>\n                        <b-button id=\"screenshotbutton\" @click=\"clickSC(); $bvModal.show('bv-modal-show-screenshot');\"> Take screenshot </b-button>\n                        \n                        <br/>\n                        <br/>\n                        <div class=\"preview-tab\" v-if=\"isHidden\">\n                          <img id=\"file-upload-image\" :src=\"imageURL\" alt=\"\" />\n                        </div>\n                      </div>\n                      <b-button class=\"mt-3\" block variant='outline-danger' @click=\"removeImage\">Remove Preview Image</b-button>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-uploadimagebutton')\">Close</b-button>\n\n                    </b-modal>\n\n                    <b-modal id=\"bv-modal-show-screenshot\" size=\"xl\" hide-footer>\n                      <template #modal-title>\n                        Screenshot\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <cropper\n                            :src=\"screenshot\"\n                            @change=\"change\"\n                            :stencil-props=\"{\n                              aspectRatio: 16/9,\n                            }\"\n                          />\n                      </div>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-show-screenshot')\">Close</b-button>\n                      <b-button class=\"mt-3\" variant='outline-danger' block @click=\"cropImage();$bvModal.hide('bv-modal-show-screenshot')\">Crop and Save</b-button>\n\n                    </b-modal>\n\n                    <b-button class=\"reviewbutton\" @click=\"$bvModal.show('bv-modal-review-data')\">Review Data</b-button>\n\n                    <b-modal id=\"bv-modal-review-data\" hide-footer>\n                      <template #modal-title>\n                        Review Data\n                      </template>\n                      <div class=\"d-block text-center\">\n                        <b-list-group v-for=\"(value, index) in responseData\" :key=\"index\">\n    \n                          <b-list-group-item align=\"left\" > <strong> {{ Object.keys(value)[0] }} </strong> : {{ value[Object.keys(value)[0]] }} <button class=\"btn btn-danger\" v-on:click=\"deleteItem(index)\" style=\"float: right;\">x</button></b-list-group-item>\n\n                        </b-list-group>\n\n                          <b-list-group-item align=\"left\" v-if=\"this.feedbackTextArea\" style=\"padding:20px\"> <strong> Comment </strong> : {{ this.feedbackTextArea }} <button class=\"btn btn-danger\" v-on:click=\"deleteComment()\" style=\"float: right; \">x</button></b-list-group-item>\n\n                          <b-list-group-item align=\"left\" v-if=\"this.imageURL\"> <strong> Image URL</strong> : <img id=\"file-upload-image\" :src=\"imageURL\" alt=\"\" /> <button class=\"btn btn-danger\" v-on:click=\"removeImage()\" style=\"float: right;\">x</button></b-list-group-item>\n\n\n                      </div>\n                      <b-button class=\"mt-3\" block @click=\"$bvModal.hide('bv-modal-review-data')\">Close</b-button>\n                    </b-modal>\n\n                    <button class=\"submitbutton\" @submit.prevent=\"submitFeedbackForm\" >SUBMIT</button>\n                </div>\n              </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- {{ responseData }} -->\n\n    <!-- <input type=\"text\" @sentTexts=\"sentTexts($event)\"> -->\n\n    <br/>\n    <br/>\n\n</section>\n\n</template>\n\n<script>\n\n\nimport AWS from \"aws-sdk\";\nimport Speech2Text from \"./STT\"\nimport html2canvas from 'html2canvas';\nimport { Cropper } from 'vue-advanced-cropper';\nimport 'vue-advanced-cropper/dist/style.css';\n\nAWS.config.update({\n      region: \"ap-south-1\",\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: \"ap-south-1:946075dc-1656-44d1-92cd-4c8aa6a2ec08\"\n      }),});\n\nexport default {\n  name: 'FeedbackForm',\n\n  components: {\n    Speech2Text,\n    Cropper\n  },\n\n  data() {\n    return {\n      feedbackTextArea: '',\n      selectedImage: null,\n      text: '',\n      sentences: null,\n      responseData: [],\n      max_len: '500',\n      screenshot: null,\n      canvasCropped: null,\n      imageURL: ''\n      }\n  },\n\n  mounted() {\n    \n    this.responseData.push({SiteName: window.location.href})\n    this.responseData.push({Resolution: String(window.screen.width) + 'x' + String(window.screen.height) })\n    this.responseData.push({ userAgent: navigator.userAgent})\n    this.responseData.push({ 'ACCEPT LANGUAGE': navigator.language})\n    if (document.referrer){\n      this.responseData.push({ 'REFERRER': document.referrer})\n    }\n\n    var i;var pluginsData = \"\";\n    for (i = 0; i < navigator.plugins.length; i++) {\n      pluginsData += navigator.plugins[i].name + \" - \"+ navigator.plugins[i].filename + \". \" ;\n    }\n\n    this.responseData.push({Plugins: pluginsData})\n\n  },\n\n  computed: {\n\n    commentCharacterCount() {\n      return this.feedbackTextArea.length;\n\n    },\n    lengthExceeded(){\n      return this.feedbackTextArea.length==this.max_len;\n    },\n    isHidden(){\n      return this.imageURL != ''\n    }\n    \n\n  },\n\n  methods: {\n\n    // sentTexts(text){\n    //   console.log(text)\n    // },\n\n    search(nameKey){\n    for (var i=0; i < this.responseData.length; i++) {\n      console.log(\"searched\",Object.keys(this.responseData[i])[0])\n        if (Object.keys(this.responseData[i])[0] === nameKey) {\n            return true;\n            }\n        }\n        return false;\n    },\n\n    removeImage(){\n      this.imageURL = ''\n    },\n\n    uploadButtonResult(){\n      if (document.getElementById(\"file-upload-image\")){\n        console.log(document.getElementById(\"file-upload-image\").getAttribute('src'))\n      }\n      else{\n        console.log(null)\n      }\n      \n    },\n\n    cropImage(){\n      console.log(\"Cropped Image:\",this.canvasCropped)\n      this.imageURL = this.canvasCropped.toDataURL('image/jpeg', 1)\n      // document.getElementById(\"file-upload-image\").setAttribute('src', this.canvasCropped.toDataURL('image/jpeg', 1));\n    },\n\n    change({ canvas }) {\n      this.canvasCropped = canvas\n      // var imgString = canvas.toDataURL(\"image/png\");\n      // document.getElementById('croppedImage').setAttribute('src', imgString);\n\t\t},\n\n    clickSC(){\n      html2canvas(document.body).then(canvas => {\n\n        this.screenshot = canvas.toDataURL('image/jpeg', 1);\n        });\n  \n    },\n\n    deleteItem(index){\n      this.responseData.splice(index,1)\n    },\n\n    deleteComment(){\n      this.feedbackTextArea = ''\n    },\n\n    speechEnd({sentences, text}) {\n      console.log('text', text)\n      console.log('sentences', sentences)\n      this.sentences = sentences\n      this.feedbackTextArea = text\n    },\n\n    submitFeedbackForm() {\n      \n      this.feedbackTextArea = ''\n      console.log(\"Form submitted\")\n\n      let s3 = new AWS.S3();\n      \n      if (this.selectedImage){\n\n        var filePath = this.selectedImage.name;\n      \n        var params = {\n            \"Body\": this.selectedImage,\n            \"Bucket\": \"feedbacktoolbucket\",\n            \"Key\": filePath,\n            \"ACL\": \"public-read\", /* This makes the image public, but only works if your S3 bucket allows public access */\n            \"ContentType\": this.selectedImage.type /* This is important to handle jpg vs png etc */\n        };\n\n        s3.upload(params, (err, data) => {\n            if (err) {\n              console.log(\"Error\", err);\n            } if (data) {\n              console.log(\"Upload Success\", data.Location);\n              this.responseData.push({ImageLocation: data.Location})\n            }\n          });\n      }\n\n      document.getElementById(\"selectedImageId\").value = null;\n\n    },\n    \n    onImageSelected(e) {\n      this.selectedImage = e.target.files[0]\n      console.log(this.selectedImage)\n      this.imageURL = URL.createObjectURL(this.selectedImage)\n      // document.getElementById(\"file-upload-image\").setAttribute('src', URL.createObjectURL(this.selectedImage));\n      console.log(this.imageURL)\n    }\n\n\n  }\n\n\n\n}\n\n</script>\n\n<style>\n\n.submitbutton, .reviewbutton {\n  background-color: purple;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  margin: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  border-radius: 3px;\n  font-size: 12px;\n}\n\n.max_len_tag{\n  color: red;\n}\n\n.preview-tab{\n  display: flex;\n  justify-content: center;\n}\n\n\n#file-upload-image { \n  border: 5px solid #555;\n  margin:20px;\n  width: 200px;\n  height: 200px;\n\n}\n\n</style>\n"]}]}